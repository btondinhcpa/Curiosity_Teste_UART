

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Jan 24 16:27:24 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Version 2.40
    48                           ; Generated 17/11/2021 GMT
    49                           ; 
    50                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F1619 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82     0000                     	;# 
    83     0001                     	;# 
    84     0002                     	;# 
    85     0003                     	;# 
    86     0004                     	;# 
    87     0005                     	;# 
    88     0006                     	;# 
    89     0007                     	;# 
    90     0008                     	;# 
    91     0009                     	;# 
    92     000A                     	;# 
    93     000B                     	;# 
    94     000C                     	;# 
    95     000D                     	;# 
    96     000E                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     0090                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     010C                     	;# 
   136     010D                     	;# 
   137     010E                     	;# 
   138     0111                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0115                     	;# 
   143     0116                     	;# 
   144     0117                     	;# 
   145     0118                     	;# 
   146     0119                     	;# 
   147     011C                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     018E                     	;# 
   151     0191                     	;# 
   152     0191                     	;# 
   153     0192                     	;# 
   154     0193                     	;# 
   155     0193                     	;# 
   156     0194                     	;# 
   157     0195                     	;# 
   158     0196                     	;# 
   159     0197                     	;# 
   160     0199                     	;# 
   161     0199                     	;# 
   162     0199                     	;# 
   163     019A                     	;# 
   164     019A                     	;# 
   165     019A                     	;# 
   166     019B                     	;# 
   167     019B                     	;# 
   168     019B                     	;# 
   169     019B                     	;# 
   170     019B                     	;# 
   171     019C                     	;# 
   172     019C                     	;# 
   173     019C                     	;# 
   174     019D                     	;# 
   175     019D                     	;# 
   176     019D                     	;# 
   177     019E                     	;# 
   178     019E                     	;# 
   179     019E                     	;# 
   180     019F                     	;# 
   181     019F                     	;# 
   182     019F                     	;# 
   183     019F                     	;# 
   184     019F                     	;# 
   185     020C                     	;# 
   186     020D                     	;# 
   187     020E                     	;# 
   188     0211                     	;# 
   189     0211                     	;# 
   190     0212                     	;# 
   191     0212                     	;# 
   192     0213                     	;# 
   193     0213                     	;# 
   194     0214                     	;# 
   195     0214                     	;# 
   196     0215                     	;# 
   197     0215                     	;# 
   198     0215                     	;# 
   199     0215                     	;# 
   200     0216                     	;# 
   201     0216                     	;# 
   202     0217                     	;# 
   203     0217                     	;# 
   204     028C                     	;# 
   205     028D                     	;# 
   206     028E                     	;# 
   207     0291                     	;# 
   208     0291                     	;# 
   209     0292                     	;# 
   210     0293                     	;# 
   211     0294                     	;# 
   212     0298                     	;# 
   213     0298                     	;# 
   214     0299                     	;# 
   215     029A                     	;# 
   216     029B                     	;# 
   217     029E                     	;# 
   218     030C                     	;# 
   219     030D                     	;# 
   220     030E                     	;# 
   221     038C                     	;# 
   222     038D                     	;# 
   223     038E                     	;# 
   224     0391                     	;# 
   225     0392                     	;# 
   226     0393                     	;# 
   227     0394                     	;# 
   228     0395                     	;# 
   229     0396                     	;# 
   230     0397                     	;# 
   231     0398                     	;# 
   232     0399                     	;# 
   233     040E                     	;# 
   234     0413                     	;# 
   235     0413                     	;# 
   236     0414                     	;# 
   237     0414                     	;# 
   238     0415                     	;# 
   239     0416                     	;# 
   240     0417                     	;# 
   241     0418                     	;# 
   242     041A                     	;# 
   243     041A                     	;# 
   244     041B                     	;# 
   245     041B                     	;# 
   246     041C                     	;# 
   247     041D                     	;# 
   248     041E                     	;# 
   249     041F                     	;# 
   250     0493                     	;# 
   251     0494                     	;# 
   252     0495                     	;# 
   253     0496                     	;# 
   254     049A                     	;# 
   255     049B                     	;# 
   256     049C                     	;# 
   257     049D                     	;# 
   258     058C                     	;# 
   259     058C                     	;# 
   260     058D                     	;# 
   261     058E                     	;# 
   262     058E                     	;# 
   263     058F                     	;# 
   264     0590                     	;# 
   265     0590                     	;# 
   266     0591                     	;# 
   267     0592                     	;# 
   268     0592                     	;# 
   269     0593                     	;# 
   270     0594                     	;# 
   271     0594                     	;# 
   272     0595                     	;# 
   273     0596                     	;# 
   274     0596                     	;# 
   275     0597                     	;# 
   276     0598                     	;# 
   277     0599                     	;# 
   278     059A                     	;# 
   279     059B                     	;# 
   280     059B                     	;# 
   281     059C                     	;# 
   282     059D                     	;# 
   283     060C                     	;# 
   284     060C                     	;# 
   285     060D                     	;# 
   286     060E                     	;# 
   287     060F                     	;# 
   288     060F                     	;# 
   289     0610                     	;# 
   290     0611                     	;# 
   291     0612                     	;# 
   292     0613                     	;# 
   293     0614                     	;# 
   294     0617                     	;# 
   295     0617                     	;# 
   296     0618                     	;# 
   297     0619                     	;# 
   298     061A                     	;# 
   299     061A                     	;# 
   300     061B                     	;# 
   301     061C                     	;# 
   302     0691                     	;# 
   303     0692                     	;# 
   304     0693                     	;# 
   305     0694                     	;# 
   306     0695                     	;# 
   307     0696                     	;# 
   308     0697                     	;# 
   309     0699                     	;# 
   310     069A                     	;# 
   311     0711                     	;# 
   312     0712                     	;# 
   313     0713                     	;# 
   314     0714                     	;# 
   315     0715                     	;# 
   316     0718                     	;# 
   317     0718                     	;# 
   318     0719                     	;# 
   319     071A                     	;# 
   320     071A                     	;# 
   321     071B                     	;# 
   322     071C                     	;# 
   323     071D                     	;# 
   324     0791                     	;# 
   325     0791                     	;# 
   326     0792                     	;# 
   327     0793                     	;# 
   328     0793                     	;# 
   329     0794                     	;# 
   330     0795                     	;# 
   331     0795                     	;# 
   332     0796                     	;# 
   333     0797                     	;# 
   334     0797                     	;# 
   335     0798                     	;# 
   336     0799                     	;# 
   337     079A                     	;# 
   338     080C                     	;# 
   339     080C                     	;# 
   340     080D                     	;# 
   341     080E                     	;# 
   342     080E                     	;# 
   343     080F                     	;# 
   344     0810                     	;# 
   345     0810                     	;# 
   346     0811                     	;# 
   347     0812                     	;# 
   348     0812                     	;# 
   349     0813                     	;# 
   350     0814                     	;# 
   351     0815                     	;# 
   352     0816                     	;# 
   353     0817                     	;# 
   354     0818                     	;# 
   355     0819                     	;# 
   356     081A                     	;# 
   357     081A                     	;# 
   358     081B                     	;# 
   359     081C                     	;# 
   360     081C                     	;# 
   361     081D                     	;# 
   362     088C                     	;# 
   363     088D                     	;# 
   364     088E                     	;# 
   365     088F                     	;# 
   366     088F                     	;# 
   367     0890                     	;# 
   368     0891                     	;# 
   369     0892                     	;# 
   370     0893                     	;# 
   371     0893                     	;# 
   372     0894                     	;# 
   373     0895                     	;# 
   374     0896                     	;# 
   375     0897                     	;# 
   376     0897                     	;# 
   377     0898                     	;# 
   378     0899                     	;# 
   379     0D8C                     	;# 
   380     0D8C                     	;# 
   381     0D8D                     	;# 
   382     0D8E                     	;# 
   383     0D8F                     	;# 
   384     0D8F                     	;# 
   385     0D90                     	;# 
   386     0D91                     	;# 
   387     0D92                     	;# 
   388     0D92                     	;# 
   389     0D93                     	;# 
   390     0D94                     	;# 
   391     0D95                     	;# 
   392     0D95                     	;# 
   393     0D96                     	;# 
   394     0D97                     	;# 
   395     0D98                     	;# 
   396     0D99                     	;# 
   397     0D9A                     	;# 
   398     0D9B                     	;# 
   399     0D9C                     	;# 
   400     0D9D                     	;# 
   401     0D9E                     	;# 
   402     0D9E                     	;# 
   403     0D9F                     	;# 
   404     0DA0                     	;# 
   405     0DA1                     	;# 
   406     0DA1                     	;# 
   407     0DA2                     	;# 
   408     0DA3                     	;# 
   409     0DA4                     	;# 
   410     0DA4                     	;# 
   411     0DA5                     	;# 
   412     0DA6                     	;# 
   413     0DA7                     	;# 
   414     0DA7                     	;# 
   415     0DA8                     	;# 
   416     0DA9                     	;# 
   417     0DAA                     	;# 
   418     0DAB                     	;# 
   419     0DAC                     	;# 
   420     0DAD                     	;# 
   421     0DAE                     	;# 
   422     0DAF                     	;# 
   423     0E0F                     	;# 
   424     0E10                     	;# 
   425     0E11                     	;# 
   426     0E12                     	;# 
   427     0E13                     	;# 
   428     0E14                     	;# 
   429     0E15                     	;# 
   430     0E16                     	;# 
   431     0E17                     	;# 
   432     0E18                     	;# 
   433     0E19                     	;# 
   434     0E1A                     	;# 
   435     0E1B                     	;# 
   436     0E1C                     	;# 
   437     0E1D                     	;# 
   438     0E1E                     	;# 
   439     0E1F                     	;# 
   440     0E20                     	;# 
   441     0E21                     	;# 
   442     0E22                     	;# 
   443     0E23                     	;# 
   444     0E24                     	;# 
   445     0E25                     	;# 
   446     0E26                     	;# 
   447     0E27                     	;# 
   448     0E28                     	;# 
   449     0E29                     	;# 
   450     0E2A                     	;# 
   451     0E2B                     	;# 
   452     0E2C                     	;# 
   453     0E2D                     	;# 
   454     0E2E                     	;# 
   455     0E90                     	;# 
   456     0E91                     	;# 
   457     0E92                     	;# 
   458     0E94                     	;# 
   459     0E95                     	;# 
   460     0E9C                     	;# 
   461     0E9D                     	;# 
   462     0E9E                     	;# 
   463     0E9F                     	;# 
   464     0EA0                     	;# 
   465     0EA1                     	;# 
   466     0EA2                     	;# 
   467     0EA3                     	;# 
   468     0EA4                     	;# 
   469     0EA5                     	;# 
   470     0EA6                     	;# 
   471     0EA7                     	;# 
   472     0F0F                     	;# 
   473     0F10                     	;# 
   474     0F11                     	;# 
   475     0F12                     	;# 
   476     0F13                     	;# 
   477     0F14                     	;# 
   478     0F15                     	;# 
   479     0F16                     	;# 
   480     0F17                     	;# 
   481     0F18                     	;# 
   482     0F19                     	;# 
   483     0F1A                     	;# 
   484     0F1B                     	;# 
   485     0F1C                     	;# 
   486     0F1D                     	;# 
   487     0F1E                     	;# 
   488     0F1F                     	;# 
   489     0F20                     	;# 
   490     0F21                     	;# 
   491     0F22                     	;# 
   492     0F23                     	;# 
   493     0F24                     	;# 
   494     0F25                     	;# 
   495     0F26                     	;# 
   496     0F27                     	;# 
   497     0F28                     	;# 
   498     0F29                     	;# 
   499     0F2A                     	;# 
   500     0F2B                     	;# 
   501     0F2C                     	;# 
   502     0F2D                     	;# 
   503     0F2E                     	;# 
   504     0F2F                     	;# 
   505     0F30                     	;# 
   506     0F31                     	;# 
   507     0F32                     	;# 
   508     0F33                     	;# 
   509     0F34                     	;# 
   510     0F35                     	;# 
   511     0F36                     	;# 
   512     0F37                     	;# 
   513     0FE4                     	;# 
   514     0FE5                     	;# 
   515     0FE6                     	;# 
   516     0FE7                     	;# 
   517     0FE8                     	;# 
   518     0FE9                     	;# 
   519     0FEA                     	;# 
   520     0FEB                     	;# 
   521     0FED                     	;# 
   522     0FEE                     	;# 
   523     0FEF                     	;# 
   524     0000                     	;# 
   525     0001                     	;# 
   526     0002                     	;# 
   527     0003                     	;# 
   528     0004                     	;# 
   529     0005                     	;# 
   530     0006                     	;# 
   531     0007                     	;# 
   532     0008                     	;# 
   533     0009                     	;# 
   534     000A                     	;# 
   535     000B                     	;# 
   536     000C                     	;# 
   537     000D                     	;# 
   538     000E                     	;# 
   539     0010                     	;# 
   540     0011                     	;# 
   541     0012                     	;# 
   542     0013                     	;# 
   543     0014                     	;# 
   544     0015                     	;# 
   545     0016                     	;# 
   546     0016                     	;# 
   547     0017                     	;# 
   548     0018                     	;# 
   549     0019                     	;# 
   550     001A                     	;# 
   551     001A                     	;# 
   552     001B                     	;# 
   553     001B                     	;# 
   554     001C                     	;# 
   555     001D                     	;# 
   556     001E                     	;# 
   557     001F                     	;# 
   558     008C                     	;# 
   559     008D                     	;# 
   560     008E                     	;# 
   561     0090                     	;# 
   562     0091                     	;# 
   563     0092                     	;# 
   564     0093                     	;# 
   565     0094                     	;# 
   566     0095                     	;# 
   567     0096                     	;# 
   568     0098                     	;# 
   569     0099                     	;# 
   570     009A                     	;# 
   571     009B                     	;# 
   572     009B                     	;# 
   573     009C                     	;# 
   574     009D                     	;# 
   575     009E                     	;# 
   576     009F                     	;# 
   577     010C                     	;# 
   578     010D                     	;# 
   579     010E                     	;# 
   580     0111                     	;# 
   581     0112                     	;# 
   582     0113                     	;# 
   583     0114                     	;# 
   584     0115                     	;# 
   585     0116                     	;# 
   586     0117                     	;# 
   587     0118                     	;# 
   588     0119                     	;# 
   589     011C                     	;# 
   590     018C                     	;# 
   591     018D                     	;# 
   592     018E                     	;# 
   593     0191                     	;# 
   594     0191                     	;# 
   595     0192                     	;# 
   596     0193                     	;# 
   597     0193                     	;# 
   598     0194                     	;# 
   599     0195                     	;# 
   600     0196                     	;# 
   601     0197                     	;# 
   602     0199                     	;# 
   603     0199                     	;# 
   604     0199                     	;# 
   605     019A                     	;# 
   606     019A                     	;# 
   607     019A                     	;# 
   608     019B                     	;# 
   609     019B                     	;# 
   610     019B                     	;# 
   611     019B                     	;# 
   612     019B                     	;# 
   613     019C                     	;# 
   614     019C                     	;# 
   615     019C                     	;# 
   616     019D                     	;# 
   617     019D                     	;# 
   618     019D                     	;# 
   619     019E                     	;# 
   620     019E                     	;# 
   621     019E                     	;# 
   622     019F                     	;# 
   623     019F                     	;# 
   624     019F                     	;# 
   625     019F                     	;# 
   626     019F                     	;# 
   627     020C                     	;# 
   628     020D                     	;# 
   629     020E                     	;# 
   630     0211                     	;# 
   631     0211                     	;# 
   632     0212                     	;# 
   633     0212                     	;# 
   634     0213                     	;# 
   635     0213                     	;# 
   636     0214                     	;# 
   637     0214                     	;# 
   638     0215                     	;# 
   639     0215                     	;# 
   640     0215                     	;# 
   641     0215                     	;# 
   642     0216                     	;# 
   643     0216                     	;# 
   644     0217                     	;# 
   645     0217                     	;# 
   646     028C                     	;# 
   647     028D                     	;# 
   648     028E                     	;# 
   649     0291                     	;# 
   650     0291                     	;# 
   651     0292                     	;# 
   652     0293                     	;# 
   653     0294                     	;# 
   654     0298                     	;# 
   655     0298                     	;# 
   656     0299                     	;# 
   657     029A                     	;# 
   658     029B                     	;# 
   659     029E                     	;# 
   660     030C                     	;# 
   661     030D                     	;# 
   662     030E                     	;# 
   663     038C                     	;# 
   664     038D                     	;# 
   665     038E                     	;# 
   666     0391                     	;# 
   667     0392                     	;# 
   668     0393                     	;# 
   669     0394                     	;# 
   670     0395                     	;# 
   671     0396                     	;# 
   672     0397                     	;# 
   673     0398                     	;# 
   674     0399                     	;# 
   675     040E                     	;# 
   676     0413                     	;# 
   677     0413                     	;# 
   678     0414                     	;# 
   679     0414                     	;# 
   680     0415                     	;# 
   681     0416                     	;# 
   682     0417                     	;# 
   683     0418                     	;# 
   684     041A                     	;# 
   685     041A                     	;# 
   686     041B                     	;# 
   687     041B                     	;# 
   688     041C                     	;# 
   689     041D                     	;# 
   690     041E                     	;# 
   691     041F                     	;# 
   692     0493                     	;# 
   693     0494                     	;# 
   694     0495                     	;# 
   695     0496                     	;# 
   696     049A                     	;# 
   697     049B                     	;# 
   698     049C                     	;# 
   699     049D                     	;# 
   700     058C                     	;# 
   701     058C                     	;# 
   702     058D                     	;# 
   703     058E                     	;# 
   704     058E                     	;# 
   705     058F                     	;# 
   706     0590                     	;# 
   707     0590                     	;# 
   708     0591                     	;# 
   709     0592                     	;# 
   710     0592                     	;# 
   711     0593                     	;# 
   712     0594                     	;# 
   713     0594                     	;# 
   714     0595                     	;# 
   715     0596                     	;# 
   716     0596                     	;# 
   717     0597                     	;# 
   718     0598                     	;# 
   719     0599                     	;# 
   720     059A                     	;# 
   721     059B                     	;# 
   722     059B                     	;# 
   723     059C                     	;# 
   724     059D                     	;# 
   725     060C                     	;# 
   726     060C                     	;# 
   727     060D                     	;# 
   728     060E                     	;# 
   729     060F                     	;# 
   730     060F                     	;# 
   731     0610                     	;# 
   732     0611                     	;# 
   733     0612                     	;# 
   734     0613                     	;# 
   735     0614                     	;# 
   736     0617                     	;# 
   737     0617                     	;# 
   738     0618                     	;# 
   739     0619                     	;# 
   740     061A                     	;# 
   741     061A                     	;# 
   742     061B                     	;# 
   743     061C                     	;# 
   744     0691                     	;# 
   745     0692                     	;# 
   746     0693                     	;# 
   747     0694                     	;# 
   748     0695                     	;# 
   749     0696                     	;# 
   750     0697                     	;# 
   751     0699                     	;# 
   752     069A                     	;# 
   753     0711                     	;# 
   754     0712                     	;# 
   755     0713                     	;# 
   756     0714                     	;# 
   757     0715                     	;# 
   758     0718                     	;# 
   759     0718                     	;# 
   760     0719                     	;# 
   761     071A                     	;# 
   762     071A                     	;# 
   763     071B                     	;# 
   764     071C                     	;# 
   765     071D                     	;# 
   766     0791                     	;# 
   767     0791                     	;# 
   768     0792                     	;# 
   769     0793                     	;# 
   770     0793                     	;# 
   771     0794                     	;# 
   772     0795                     	;# 
   773     0795                     	;# 
   774     0796                     	;# 
   775     0797                     	;# 
   776     0797                     	;# 
   777     0798                     	;# 
   778     0799                     	;# 
   779     079A                     	;# 
   780     080C                     	;# 
   781     080C                     	;# 
   782     080D                     	;# 
   783     080E                     	;# 
   784     080E                     	;# 
   785     080F                     	;# 
   786     0810                     	;# 
   787     0810                     	;# 
   788     0811                     	;# 
   789     0812                     	;# 
   790     0812                     	;# 
   791     0813                     	;# 
   792     0814                     	;# 
   793     0815                     	;# 
   794     0816                     	;# 
   795     0817                     	;# 
   796     0818                     	;# 
   797     0819                     	;# 
   798     081A                     	;# 
   799     081A                     	;# 
   800     081B                     	;# 
   801     081C                     	;# 
   802     081C                     	;# 
   803     081D                     	;# 
   804     088C                     	;# 
   805     088D                     	;# 
   806     088E                     	;# 
   807     088F                     	;# 
   808     088F                     	;# 
   809     0890                     	;# 
   810     0891                     	;# 
   811     0892                     	;# 
   812     0893                     	;# 
   813     0893                     	;# 
   814     0894                     	;# 
   815     0895                     	;# 
   816     0896                     	;# 
   817     0897                     	;# 
   818     0897                     	;# 
   819     0898                     	;# 
   820     0899                     	;# 
   821     0D8C                     	;# 
   822     0D8C                     	;# 
   823     0D8D                     	;# 
   824     0D8E                     	;# 
   825     0D8F                     	;# 
   826     0D8F                     	;# 
   827     0D90                     	;# 
   828     0D91                     	;# 
   829     0D92                     	;# 
   830     0D92                     	;# 
   831     0D93                     	;# 
   832     0D94                     	;# 
   833     0D95                     	;# 
   834     0D95                     	;# 
   835     0D96                     	;# 
   836     0D97                     	;# 
   837     0D98                     	;# 
   838     0D99                     	;# 
   839     0D9A                     	;# 
   840     0D9B                     	;# 
   841     0D9C                     	;# 
   842     0D9D                     	;# 
   843     0D9E                     	;# 
   844     0D9E                     	;# 
   845     0D9F                     	;# 
   846     0DA0                     	;# 
   847     0DA1                     	;# 
   848     0DA1                     	;# 
   849     0DA2                     	;# 
   850     0DA3                     	;# 
   851     0DA4                     	;# 
   852     0DA4                     	;# 
   853     0DA5                     	;# 
   854     0DA6                     	;# 
   855     0DA7                     	;# 
   856     0DA7                     	;# 
   857     0DA8                     	;# 
   858     0DA9                     	;# 
   859     0DAA                     	;# 
   860     0DAB                     	;# 
   861     0DAC                     	;# 
   862     0DAD                     	;# 
   863     0DAE                     	;# 
   864     0DAF                     	;# 
   865     0E0F                     	;# 
   866     0E10                     	;# 
   867     0E11                     	;# 
   868     0E12                     	;# 
   869     0E13                     	;# 
   870     0E14                     	;# 
   871     0E15                     	;# 
   872     0E16                     	;# 
   873     0E17                     	;# 
   874     0E18                     	;# 
   875     0E19                     	;# 
   876     0E1A                     	;# 
   877     0E1B                     	;# 
   878     0E1C                     	;# 
   879     0E1D                     	;# 
   880     0E1E                     	;# 
   881     0E1F                     	;# 
   882     0E20                     	;# 
   883     0E21                     	;# 
   884     0E22                     	;# 
   885     0E23                     	;# 
   886     0E24                     	;# 
   887     0E25                     	;# 
   888     0E26                     	;# 
   889     0E27                     	;# 
   890     0E28                     	;# 
   891     0E29                     	;# 
   892     0E2A                     	;# 
   893     0E2B                     	;# 
   894     0E2C                     	;# 
   895     0E2D                     	;# 
   896     0E2E                     	;# 
   897     0E90                     	;# 
   898     0E91                     	;# 
   899     0E92                     	;# 
   900     0E94                     	;# 
   901     0E95                     	;# 
   902     0E9C                     	;# 
   903     0E9D                     	;# 
   904     0E9E                     	;# 
   905     0E9F                     	;# 
   906     0EA0                     	;# 
   907     0EA1                     	;# 
   908     0EA2                     	;# 
   909     0EA3                     	;# 
   910     0EA4                     	;# 
   911     0EA5                     	;# 
   912     0EA6                     	;# 
   913     0EA7                     	;# 
   914     0F0F                     	;# 
   915     0F10                     	;# 
   916     0F11                     	;# 
   917     0F12                     	;# 
   918     0F13                     	;# 
   919     0F14                     	;# 
   920     0F15                     	;# 
   921     0F16                     	;# 
   922     0F17                     	;# 
   923     0F18                     	;# 
   924     0F19                     	;# 
   925     0F1A                     	;# 
   926     0F1B                     	;# 
   927     0F1C                     	;# 
   928     0F1D                     	;# 
   929     0F1E                     	;# 
   930     0F1F                     	;# 
   931     0F20                     	;# 
   932     0F21                     	;# 
   933     0F22                     	;# 
   934     0F23                     	;# 
   935     0F24                     	;# 
   936     0F25                     	;# 
   937     0F26                     	;# 
   938     0F27                     	;# 
   939     0F28                     	;# 
   940     0F29                     	;# 
   941     0F2A                     	;# 
   942     0F2B                     	;# 
   943     0F2C                     	;# 
   944     0F2D                     	;# 
   945     0F2E                     	;# 
   946     0F2F                     	;# 
   947     0F30                     	;# 
   948     0F31                     	;# 
   949     0F32                     	;# 
   950     0F33                     	;# 
   951     0F34                     	;# 
   952     0F35                     	;# 
   953     0F36                     	;# 
   954     0F37                     	;# 
   955     0FE4                     	;# 
   956     0FE5                     	;# 
   957     0FE6                     	;# 
   958     0FE7                     	;# 
   959     0FE8                     	;# 
   960     0FE9                     	;# 
   961     0FEA                     	;# 
   962     0FEB                     	;# 
   963     0FED                     	;# 
   964     0FEE                     	;# 
   965     0FEF                     	;# 
   966     0000                     	;# 
   967     0001                     	;# 
   968     0002                     	;# 
   969     0003                     	;# 
   970     0004                     	;# 
   971     0005                     	;# 
   972     0006                     	;# 
   973     0007                     	;# 
   974     0008                     	;# 
   975     0009                     	;# 
   976     000A                     	;# 
   977     000B                     	;# 
   978     000C                     	;# 
   979     000D                     	;# 
   980     000E                     	;# 
   981     0010                     	;# 
   982     0011                     	;# 
   983     0012                     	;# 
   984     0013                     	;# 
   985     0014                     	;# 
   986     0015                     	;# 
   987     0016                     	;# 
   988     0016                     	;# 
   989     0017                     	;# 
   990     0018                     	;# 
   991     0019                     	;# 
   992     001A                     	;# 
   993     001A                     	;# 
   994     001B                     	;# 
   995     001B                     	;# 
   996     001C                     	;# 
   997     001D                     	;# 
   998     001E                     	;# 
   999     001F                     	;# 
  1000     008C                     	;# 
  1001     008D                     	;# 
  1002     008E                     	;# 
  1003     0090                     	;# 
  1004     0091                     	;# 
  1005     0092                     	;# 
  1006     0093                     	;# 
  1007     0094                     	;# 
  1008     0095                     	;# 
  1009     0096                     	;# 
  1010     0098                     	;# 
  1011     0099                     	;# 
  1012     009A                     	;# 
  1013     009B                     	;# 
  1014     009B                     	;# 
  1015     009C                     	;# 
  1016     009D                     	;# 
  1017     009E                     	;# 
  1018     009F                     	;# 
  1019     010C                     	;# 
  1020     010D                     	;# 
  1021     010E                     	;# 
  1022     0111                     	;# 
  1023     0112                     	;# 
  1024     0113                     	;# 
  1025     0114                     	;# 
  1026     0115                     	;# 
  1027     0116                     	;# 
  1028     0117                     	;# 
  1029     0118                     	;# 
  1030     0119                     	;# 
  1031     011C                     	;# 
  1032     018C                     	;# 
  1033     018D                     	;# 
  1034     018E                     	;# 
  1035     0191                     	;# 
  1036     0191                     	;# 
  1037     0192                     	;# 
  1038     0193                     	;# 
  1039     0193                     	;# 
  1040     0194                     	;# 
  1041     0195                     	;# 
  1042     0196                     	;# 
  1043     0197                     	;# 
  1044     0199                     	;# 
  1045     0199                     	;# 
  1046     0199                     	;# 
  1047     019A                     	;# 
  1048     019A                     	;# 
  1049     019A                     	;# 
  1050     019B                     	;# 
  1051     019B                     	;# 
  1052     019B                     	;# 
  1053     019B                     	;# 
  1054     019B                     	;# 
  1055     019C                     	;# 
  1056     019C                     	;# 
  1057     019C                     	;# 
  1058     019D                     	;# 
  1059     019D                     	;# 
  1060     019D                     	;# 
  1061     019E                     	;# 
  1062     019E                     	;# 
  1063     019E                     	;# 
  1064     019F                     	;# 
  1065     019F                     	;# 
  1066     019F                     	;# 
  1067     019F                     	;# 
  1068     019F                     	;# 
  1069     020C                     	;# 
  1070     020D                     	;# 
  1071     020E                     	;# 
  1072     0211                     	;# 
  1073     0211                     	;# 
  1074     0212                     	;# 
  1075     0212                     	;# 
  1076     0213                     	;# 
  1077     0213                     	;# 
  1078     0214                     	;# 
  1079     0214                     	;# 
  1080     0215                     	;# 
  1081     0215                     	;# 
  1082     0215                     	;# 
  1083     0215                     	;# 
  1084     0216                     	;# 
  1085     0216                     	;# 
  1086     0217                     	;# 
  1087     0217                     	;# 
  1088     028C                     	;# 
  1089     028D                     	;# 
  1090     028E                     	;# 
  1091     0291                     	;# 
  1092     0291                     	;# 
  1093     0292                     	;# 
  1094     0293                     	;# 
  1095     0294                     	;# 
  1096     0298                     	;# 
  1097     0298                     	;# 
  1098     0299                     	;# 
  1099     029A                     	;# 
  1100     029B                     	;# 
  1101     029E                     	;# 
  1102     030C                     	;# 
  1103     030D                     	;# 
  1104     030E                     	;# 
  1105     038C                     	;# 
  1106     038D                     	;# 
  1107     038E                     	;# 
  1108     0391                     	;# 
  1109     0392                     	;# 
  1110     0393                     	;# 
  1111     0394                     	;# 
  1112     0395                     	;# 
  1113     0396                     	;# 
  1114     0397                     	;# 
  1115     0398                     	;# 
  1116     0399                     	;# 
  1117     040E                     	;# 
  1118     0413                     	;# 
  1119     0413                     	;# 
  1120     0414                     	;# 
  1121     0414                     	;# 
  1122     0415                     	;# 
  1123     0416                     	;# 
  1124     0417                     	;# 
  1125     0418                     	;# 
  1126     041A                     	;# 
  1127     041A                     	;# 
  1128     041B                     	;# 
  1129     041B                     	;# 
  1130     041C                     	;# 
  1131     041D                     	;# 
  1132     041E                     	;# 
  1133     041F                     	;# 
  1134     0493                     	;# 
  1135     0494                     	;# 
  1136     0495                     	;# 
  1137     0496                     	;# 
  1138     049A                     	;# 
  1139     049B                     	;# 
  1140     049C                     	;# 
  1141     049D                     	;# 
  1142     058C                     	;# 
  1143     058C                     	;# 
  1144     058D                     	;# 
  1145     058E                     	;# 
  1146     058E                     	;# 
  1147     058F                     	;# 
  1148     0590                     	;# 
  1149     0590                     	;# 
  1150     0591                     	;# 
  1151     0592                     	;# 
  1152     0592                     	;# 
  1153     0593                     	;# 
  1154     0594                     	;# 
  1155     0594                     	;# 
  1156     0595                     	;# 
  1157     0596                     	;# 
  1158     0596                     	;# 
  1159     0597                     	;# 
  1160     0598                     	;# 
  1161     0599                     	;# 
  1162     059A                     	;# 
  1163     059B                     	;# 
  1164     059B                     	;# 
  1165     059C                     	;# 
  1166     059D                     	;# 
  1167     060C                     	;# 
  1168     060C                     	;# 
  1169     060D                     	;# 
  1170     060E                     	;# 
  1171     060F                     	;# 
  1172     060F                     	;# 
  1173     0610                     	;# 
  1174     0611                     	;# 
  1175     0612                     	;# 
  1176     0613                     	;# 
  1177     0614                     	;# 
  1178     0617                     	;# 
  1179     0617                     	;# 
  1180     0618                     	;# 
  1181     0619                     	;# 
  1182     061A                     	;# 
  1183     061A                     	;# 
  1184     061B                     	;# 
  1185     061C                     	;# 
  1186     0691                     	;# 
  1187     0692                     	;# 
  1188     0693                     	;# 
  1189     0694                     	;# 
  1190     0695                     	;# 
  1191     0696                     	;# 
  1192     0697                     	;# 
  1193     0699                     	;# 
  1194     069A                     	;# 
  1195     0711                     	;# 
  1196     0712                     	;# 
  1197     0713                     	;# 
  1198     0714                     	;# 
  1199     0715                     	;# 
  1200     0718                     	;# 
  1201     0718                     	;# 
  1202     0719                     	;# 
  1203     071A                     	;# 
  1204     071A                     	;# 
  1205     071B                     	;# 
  1206     071C                     	;# 
  1207     071D                     	;# 
  1208     0791                     	;# 
  1209     0791                     	;# 
  1210     0792                     	;# 
  1211     0793                     	;# 
  1212     0793                     	;# 
  1213     0794                     	;# 
  1214     0795                     	;# 
  1215     0795                     	;# 
  1216     0796                     	;# 
  1217     0797                     	;# 
  1218     0797                     	;# 
  1219     0798                     	;# 
  1220     0799                     	;# 
  1221     079A                     	;# 
  1222     080C                     	;# 
  1223     080C                     	;# 
  1224     080D                     	;# 
  1225     080E                     	;# 
  1226     080E                     	;# 
  1227     080F                     	;# 
  1228     0810                     	;# 
  1229     0810                     	;# 
  1230     0811                     	;# 
  1231     0812                     	;# 
  1232     0812                     	;# 
  1233     0813                     	;# 
  1234     0814                     	;# 
  1235     0815                     	;# 
  1236     0816                     	;# 
  1237     0817                     	;# 
  1238     0818                     	;# 
  1239     0819                     	;# 
  1240     081A                     	;# 
  1241     081A                     	;# 
  1242     081B                     	;# 
  1243     081C                     	;# 
  1244     081C                     	;# 
  1245     081D                     	;# 
  1246     088C                     	;# 
  1247     088D                     	;# 
  1248     088E                     	;# 
  1249     088F                     	;# 
  1250     088F                     	;# 
  1251     0890                     	;# 
  1252     0891                     	;# 
  1253     0892                     	;# 
  1254     0893                     	;# 
  1255     0893                     	;# 
  1256     0894                     	;# 
  1257     0895                     	;# 
  1258     0896                     	;# 
  1259     0897                     	;# 
  1260     0897                     	;# 
  1261     0898                     	;# 
  1262     0899                     	;# 
  1263     0D8C                     	;# 
  1264     0D8C                     	;# 
  1265     0D8D                     	;# 
  1266     0D8E                     	;# 
  1267     0D8F                     	;# 
  1268     0D8F                     	;# 
  1269     0D90                     	;# 
  1270     0D91                     	;# 
  1271     0D92                     	;# 
  1272     0D92                     	;# 
  1273     0D93                     	;# 
  1274     0D94                     	;# 
  1275     0D95                     	;# 
  1276     0D95                     	;# 
  1277     0D96                     	;# 
  1278     0D97                     	;# 
  1279     0D98                     	;# 
  1280     0D99                     	;# 
  1281     0D9A                     	;# 
  1282     0D9B                     	;# 
  1283     0D9C                     	;# 
  1284     0D9D                     	;# 
  1285     0D9E                     	;# 
  1286     0D9E                     	;# 
  1287     0D9F                     	;# 
  1288     0DA0                     	;# 
  1289     0DA1                     	;# 
  1290     0DA1                     	;# 
  1291     0DA2                     	;# 
  1292     0DA3                     	;# 
  1293     0DA4                     	;# 
  1294     0DA4                     	;# 
  1295     0DA5                     	;# 
  1296     0DA6                     	;# 
  1297     0DA7                     	;# 
  1298     0DA7                     	;# 
  1299     0DA8                     	;# 
  1300     0DA9                     	;# 
  1301     0DAA                     	;# 
  1302     0DAB                     	;# 
  1303     0DAC                     	;# 
  1304     0DAD                     	;# 
  1305     0DAE                     	;# 
  1306     0DAF                     	;# 
  1307     0E0F                     	;# 
  1308     0E10                     	;# 
  1309     0E11                     	;# 
  1310     0E12                     	;# 
  1311     0E13                     	;# 
  1312     0E14                     	;# 
  1313     0E15                     	;# 
  1314     0E16                     	;# 
  1315     0E17                     	;# 
  1316     0E18                     	;# 
  1317     0E19                     	;# 
  1318     0E1A                     	;# 
  1319     0E1B                     	;# 
  1320     0E1C                     	;# 
  1321     0E1D                     	;# 
  1322     0E1E                     	;# 
  1323     0E1F                     	;# 
  1324     0E20                     	;# 
  1325     0E21                     	;# 
  1326     0E22                     	;# 
  1327     0E23                     	;# 
  1328     0E24                     	;# 
  1329     0E25                     	;# 
  1330     0E26                     	;# 
  1331     0E27                     	;# 
  1332     0E28                     	;# 
  1333     0E29                     	;# 
  1334     0E2A                     	;# 
  1335     0E2B                     	;# 
  1336     0E2C                     	;# 
  1337     0E2D                     	;# 
  1338     0E2E                     	;# 
  1339     0E90                     	;# 
  1340     0E91                     	;# 
  1341     0E92                     	;# 
  1342     0E94                     	;# 
  1343     0E95                     	;# 
  1344     0E9C                     	;# 
  1345     0E9D                     	;# 
  1346     0E9E                     	;# 
  1347     0E9F                     	;# 
  1348     0EA0                     	;# 
  1349     0EA1                     	;# 
  1350     0EA2                     	;# 
  1351     0EA3                     	;# 
  1352     0EA4                     	;# 
  1353     0EA5                     	;# 
  1354     0EA6                     	;# 
  1355     0EA7                     	;# 
  1356     0F0F                     	;# 
  1357     0F10                     	;# 
  1358     0F11                     	;# 
  1359     0F12                     	;# 
  1360     0F13                     	;# 
  1361     0F14                     	;# 
  1362     0F15                     	;# 
  1363     0F16                     	;# 
  1364     0F17                     	;# 
  1365     0F18                     	;# 
  1366     0F19                     	;# 
  1367     0F1A                     	;# 
  1368     0F1B                     	;# 
  1369     0F1C                     	;# 
  1370     0F1D                     	;# 
  1371     0F1E                     	;# 
  1372     0F1F                     	;# 
  1373     0F20                     	;# 
  1374     0F21                     	;# 
  1375     0F22                     	;# 
  1376     0F23                     	;# 
  1377     0F24                     	;# 
  1378     0F25                     	;# 
  1379     0F26                     	;# 
  1380     0F27                     	;# 
  1381     0F28                     	;# 
  1382     0F29                     	;# 
  1383     0F2A                     	;# 
  1384     0F2B                     	;# 
  1385     0F2C                     	;# 
  1386     0F2D                     	;# 
  1387     0F2E                     	;# 
  1388     0F2F                     	;# 
  1389     0F30                     	;# 
  1390     0F31                     	;# 
  1391     0F32                     	;# 
  1392     0F33                     	;# 
  1393     0F34                     	;# 
  1394     0F35                     	;# 
  1395     0F36                     	;# 
  1396     0F37                     	;# 
  1397     0FE4                     	;# 
  1398     0FE5                     	;# 
  1399     0FE6                     	;# 
  1400     0FE7                     	;# 
  1401     0FE8                     	;# 
  1402     0FE9                     	;# 
  1403     0FEA                     	;# 
  1404     0FEB                     	;# 
  1405     0FED                     	;# 
  1406     0FEE                     	;# 
  1407     0FEF                     	;# 
  1408     0000                     	;# 
  1409     0001                     	;# 
  1410     0002                     	;# 
  1411     0003                     	;# 
  1412     0004                     	;# 
  1413     0005                     	;# 
  1414     0006                     	;# 
  1415     0007                     	;# 
  1416     0008                     	;# 
  1417     0009                     	;# 
  1418     000A                     	;# 
  1419     000B                     	;# 
  1420     000C                     	;# 
  1421     000D                     	;# 
  1422     000E                     	;# 
  1423     0010                     	;# 
  1424     0011                     	;# 
  1425     0012                     	;# 
  1426     0013                     	;# 
  1427     0014                     	;# 
  1428     0015                     	;# 
  1429     0016                     	;# 
  1430     0016                     	;# 
  1431     0017                     	;# 
  1432     0018                     	;# 
  1433     0019                     	;# 
  1434     001A                     	;# 
  1435     001A                     	;# 
  1436     001B                     	;# 
  1437     001B                     	;# 
  1438     001C                     	;# 
  1439     001D                     	;# 
  1440     001E                     	;# 
  1441     001F                     	;# 
  1442     008C                     	;# 
  1443     008D                     	;# 
  1444     008E                     	;# 
  1445     0090                     	;# 
  1446     0091                     	;# 
  1447     0092                     	;# 
  1448     0093                     	;# 
  1449     0094                     	;# 
  1450     0095                     	;# 
  1451     0096                     	;# 
  1452     0098                     	;# 
  1453     0099                     	;# 
  1454     009A                     	;# 
  1455     009B                     	;# 
  1456     009B                     	;# 
  1457     009C                     	;# 
  1458     009D                     	;# 
  1459     009E                     	;# 
  1460     009F                     	;# 
  1461     010C                     	;# 
  1462     010D                     	;# 
  1463     010E                     	;# 
  1464     0111                     	;# 
  1465     0112                     	;# 
  1466     0113                     	;# 
  1467     0114                     	;# 
  1468     0115                     	;# 
  1469     0116                     	;# 
  1470     0117                     	;# 
  1471     0118                     	;# 
  1472     0119                     	;# 
  1473     011C                     	;# 
  1474     018C                     	;# 
  1475     018D                     	;# 
  1476     018E                     	;# 
  1477     0191                     	;# 
  1478     0191                     	;# 
  1479     0192                     	;# 
  1480     0193                     	;# 
  1481     0193                     	;# 
  1482     0194                     	;# 
  1483     0195                     	;# 
  1484     0196                     	;# 
  1485     0197                     	;# 
  1486     0199                     	;# 
  1487     0199                     	;# 
  1488     0199                     	;# 
  1489     019A                     	;# 
  1490     019A                     	;# 
  1491     019A                     	;# 
  1492     019B                     	;# 
  1493     019B                     	;# 
  1494     019B                     	;# 
  1495     019B                     	;# 
  1496     019B                     	;# 
  1497     019C                     	;# 
  1498     019C                     	;# 
  1499     019C                     	;# 
  1500     019D                     	;# 
  1501     019D                     	;# 
  1502     019D                     	;# 
  1503     019E                     	;# 
  1504     019E                     	;# 
  1505     019E                     	;# 
  1506     019F                     	;# 
  1507     019F                     	;# 
  1508     019F                     	;# 
  1509     019F                     	;# 
  1510     019F                     	;# 
  1511     020C                     	;# 
  1512     020D                     	;# 
  1513     020E                     	;# 
  1514     0211                     	;# 
  1515     0211                     	;# 
  1516     0212                     	;# 
  1517     0212                     	;# 
  1518     0213                     	;# 
  1519     0213                     	;# 
  1520     0214                     	;# 
  1521     0214                     	;# 
  1522     0215                     	;# 
  1523     0215                     	;# 
  1524     0215                     	;# 
  1525     0215                     	;# 
  1526     0216                     	;# 
  1527     0216                     	;# 
  1528     0217                     	;# 
  1529     0217                     	;# 
  1530     028C                     	;# 
  1531     028D                     	;# 
  1532     028E                     	;# 
  1533     0291                     	;# 
  1534     0291                     	;# 
  1535     0292                     	;# 
  1536     0293                     	;# 
  1537     0294                     	;# 
  1538     0298                     	;# 
  1539     0298                     	;# 
  1540     0299                     	;# 
  1541     029A                     	;# 
  1542     029B                     	;# 
  1543     029E                     	;# 
  1544     030C                     	;# 
  1545     030D                     	;# 
  1546     030E                     	;# 
  1547     038C                     	;# 
  1548     038D                     	;# 
  1549     038E                     	;# 
  1550     0391                     	;# 
  1551     0392                     	;# 
  1552     0393                     	;# 
  1553     0394                     	;# 
  1554     0395                     	;# 
  1555     0396                     	;# 
  1556     0397                     	;# 
  1557     0398                     	;# 
  1558     0399                     	;# 
  1559     040E                     	;# 
  1560     0413                     	;# 
  1561     0413                     	;# 
  1562     0414                     	;# 
  1563     0414                     	;# 
  1564     0415                     	;# 
  1565     0416                     	;# 
  1566     0417                     	;# 
  1567     0418                     	;# 
  1568     041A                     	;# 
  1569     041A                     	;# 
  1570     041B                     	;# 
  1571     041B                     	;# 
  1572     041C                     	;# 
  1573     041D                     	;# 
  1574     041E                     	;# 
  1575     041F                     	;# 
  1576     0493                     	;# 
  1577     0494                     	;# 
  1578     0495                     	;# 
  1579     0496                     	;# 
  1580     049A                     	;# 
  1581     049B                     	;# 
  1582     049C                     	;# 
  1583     049D                     	;# 
  1584     058C                     	;# 
  1585     058C                     	;# 
  1586     058D                     	;# 
  1587     058E                     	;# 
  1588     058E                     	;# 
  1589     058F                     	;# 
  1590     0590                     	;# 
  1591     0590                     	;# 
  1592     0591                     	;# 
  1593     0592                     	;# 
  1594     0592                     	;# 
  1595     0593                     	;# 
  1596     0594                     	;# 
  1597     0594                     	;# 
  1598     0595                     	;# 
  1599     0596                     	;# 
  1600     0596                     	;# 
  1601     0597                     	;# 
  1602     0598                     	;# 
  1603     0599                     	;# 
  1604     059A                     	;# 
  1605     059B                     	;# 
  1606     059B                     	;# 
  1607     059C                     	;# 
  1608     059D                     	;# 
  1609     060C                     	;# 
  1610     060C                     	;# 
  1611     060D                     	;# 
  1612     060E                     	;# 
  1613     060F                     	;# 
  1614     060F                     	;# 
  1615     0610                     	;# 
  1616     0611                     	;# 
  1617     0612                     	;# 
  1618     0613                     	;# 
  1619     0614                     	;# 
  1620     0617                     	;# 
  1621     0617                     	;# 
  1622     0618                     	;# 
  1623     0619                     	;# 
  1624     061A                     	;# 
  1625     061A                     	;# 
  1626     061B                     	;# 
  1627     061C                     	;# 
  1628     0691                     	;# 
  1629     0692                     	;# 
  1630     0693                     	;# 
  1631     0694                     	;# 
  1632     0695                     	;# 
  1633     0696                     	;# 
  1634     0697                     	;# 
  1635     0699                     	;# 
  1636     069A                     	;# 
  1637     0711                     	;# 
  1638     0712                     	;# 
  1639     0713                     	;# 
  1640     0714                     	;# 
  1641     0715                     	;# 
  1642     0718                     	;# 
  1643     0718                     	;# 
  1644     0719                     	;# 
  1645     071A                     	;# 
  1646     071A                     	;# 
  1647     071B                     	;# 
  1648     071C                     	;# 
  1649     071D                     	;# 
  1650     0791                     	;# 
  1651     0791                     	;# 
  1652     0792                     	;# 
  1653     0793                     	;# 
  1654     0793                     	;# 
  1655     0794                     	;# 
  1656     0795                     	;# 
  1657     0795                     	;# 
  1658     0796                     	;# 
  1659     0797                     	;# 
  1660     0797                     	;# 
  1661     0798                     	;# 
  1662     0799                     	;# 
  1663     079A                     	;# 
  1664     080C                     	;# 
  1665     080C                     	;# 
  1666     080D                     	;# 
  1667     080E                     	;# 
  1668     080E                     	;# 
  1669     080F                     	;# 
  1670     0810                     	;# 
  1671     0810                     	;# 
  1672     0811                     	;# 
  1673     0812                     	;# 
  1674     0812                     	;# 
  1675     0813                     	;# 
  1676     0814                     	;# 
  1677     0815                     	;# 
  1678     0816                     	;# 
  1679     0817                     	;# 
  1680     0818                     	;# 
  1681     0819                     	;# 
  1682     081A                     	;# 
  1683     081A                     	;# 
  1684     081B                     	;# 
  1685     081C                     	;# 
  1686     081C                     	;# 
  1687     081D                     	;# 
  1688     088C                     	;# 
  1689     088D                     	;# 
  1690     088E                     	;# 
  1691     088F                     	;# 
  1692     088F                     	;# 
  1693     0890                     	;# 
  1694     0891                     	;# 
  1695     0892                     	;# 
  1696     0893                     	;# 
  1697     0893                     	;# 
  1698     0894                     	;# 
  1699     0895                     	;# 
  1700     0896                     	;# 
  1701     0897                     	;# 
  1702     0897                     	;# 
  1703     0898                     	;# 
  1704     0899                     	;# 
  1705     0D8C                     	;# 
  1706     0D8C                     	;# 
  1707     0D8D                     	;# 
  1708     0D8E                     	;# 
  1709     0D8F                     	;# 
  1710     0D8F                     	;# 
  1711     0D90                     	;# 
  1712     0D91                     	;# 
  1713     0D92                     	;# 
  1714     0D92                     	;# 
  1715     0D93                     	;# 
  1716     0D94                     	;# 
  1717     0D95                     	;# 
  1718     0D95                     	;# 
  1719     0D96                     	;# 
  1720     0D97                     	;# 
  1721     0D98                     	;# 
  1722     0D99                     	;# 
  1723     0D9A                     	;# 
  1724     0D9B                     	;# 
  1725     0D9C                     	;# 
  1726     0D9D                     	;# 
  1727     0D9E                     	;# 
  1728     0D9E                     	;# 
  1729     0D9F                     	;# 
  1730     0DA0                     	;# 
  1731     0DA1                     	;# 
  1732     0DA1                     	;# 
  1733     0DA2                     	;# 
  1734     0DA3                     	;# 
  1735     0DA4                     	;# 
  1736     0DA4                     	;# 
  1737     0DA5                     	;# 
  1738     0DA6                     	;# 
  1739     0DA7                     	;# 
  1740     0DA7                     	;# 
  1741     0DA8                     	;# 
  1742     0DA9                     	;# 
  1743     0DAA                     	;# 
  1744     0DAB                     	;# 
  1745     0DAC                     	;# 
  1746     0DAD                     	;# 
  1747     0DAE                     	;# 
  1748     0DAF                     	;# 
  1749     0E0F                     	;# 
  1750     0E10                     	;# 
  1751     0E11                     	;# 
  1752     0E12                     	;# 
  1753     0E13                     	;# 
  1754     0E14                     	;# 
  1755     0E15                     	;# 
  1756     0E16                     	;# 
  1757     0E17                     	;# 
  1758     0E18                     	;# 
  1759     0E19                     	;# 
  1760     0E1A                     	;# 
  1761     0E1B                     	;# 
  1762     0E1C                     	;# 
  1763     0E1D                     	;# 
  1764     0E1E                     	;# 
  1765     0E1F                     	;# 
  1766     0E20                     	;# 
  1767     0E21                     	;# 
  1768     0E22                     	;# 
  1769     0E23                     	;# 
  1770     0E24                     	;# 
  1771     0E25                     	;# 
  1772     0E26                     	;# 
  1773     0E27                     	;# 
  1774     0E28                     	;# 
  1775     0E29                     	;# 
  1776     0E2A                     	;# 
  1777     0E2B                     	;# 
  1778     0E2C                     	;# 
  1779     0E2D                     	;# 
  1780     0E2E                     	;# 
  1781     0E90                     	;# 
  1782     0E91                     	;# 
  1783     0E92                     	;# 
  1784     0E94                     	;# 
  1785     0E95                     	;# 
  1786     0E9C                     	;# 
  1787     0E9D                     	;# 
  1788     0E9E                     	;# 
  1789     0E9F                     	;# 
  1790     0EA0                     	;# 
  1791     0EA1                     	;# 
  1792     0EA2                     	;# 
  1793     0EA3                     	;# 
  1794     0EA4                     	;# 
  1795     0EA5                     	;# 
  1796     0EA6                     	;# 
  1797     0EA7                     	;# 
  1798     0F0F                     	;# 
  1799     0F10                     	;# 
  1800     0F11                     	;# 
  1801     0F12                     	;# 
  1802     0F13                     	;# 
  1803     0F14                     	;# 
  1804     0F15                     	;# 
  1805     0F16                     	;# 
  1806     0F17                     	;# 
  1807     0F18                     	;# 
  1808     0F19                     	;# 
  1809     0F1A                     	;# 
  1810     0F1B                     	;# 
  1811     0F1C                     	;# 
  1812     0F1D                     	;# 
  1813     0F1E                     	;# 
  1814     0F1F                     	;# 
  1815     0F20                     	;# 
  1816     0F21                     	;# 
  1817     0F22                     	;# 
  1818     0F23                     	;# 
  1819     0F24                     	;# 
  1820     0F25                     	;# 
  1821     0F26                     	;# 
  1822     0F27                     	;# 
  1823     0F28                     	;# 
  1824     0F29                     	;# 
  1825     0F2A                     	;# 
  1826     0F2B                     	;# 
  1827     0F2C                     	;# 
  1828     0F2D                     	;# 
  1829     0F2E                     	;# 
  1830     0F2F                     	;# 
  1831     0F30                     	;# 
  1832     0F31                     	;# 
  1833     0F32                     	;# 
  1834     0F33                     	;# 
  1835     0F34                     	;# 
  1836     0F35                     	;# 
  1837     0F36                     	;# 
  1838     0F37                     	;# 
  1839     0FE4                     	;# 
  1840     0FE5                     	;# 
  1841     0FE6                     	;# 
  1842     0FE7                     	;# 
  1843     0FE8                     	;# 
  1844     0FE9                     	;# 
  1845     0FEA                     	;# 
  1846     0FEB                     	;# 
  1847     0FED                     	;# 
  1848     0FEE                     	;# 
  1849     0FEF                     	;# 
  1850     0000                     	;# 
  1851     0001                     	;# 
  1852     0002                     	;# 
  1853     0003                     	;# 
  1854     0004                     	;# 
  1855     0005                     	;# 
  1856     0006                     	;# 
  1857     0007                     	;# 
  1858     0008                     	;# 
  1859     0009                     	;# 
  1860     000A                     	;# 
  1861     000B                     	;# 
  1862     000C                     	;# 
  1863     000D                     	;# 
  1864     000E                     	;# 
  1865     0010                     	;# 
  1866     0011                     	;# 
  1867     0012                     	;# 
  1868     0013                     	;# 
  1869     0014                     	;# 
  1870     0015                     	;# 
  1871     0016                     	;# 
  1872     0016                     	;# 
  1873     0017                     	;# 
  1874     0018                     	;# 
  1875     0019                     	;# 
  1876     001A                     	;# 
  1877     001A                     	;# 
  1878     001B                     	;# 
  1879     001B                     	;# 
  1880     001C                     	;# 
  1881     001D                     	;# 
  1882     001E                     	;# 
  1883     001F                     	;# 
  1884     008C                     	;# 
  1885     008D                     	;# 
  1886     008E                     	;# 
  1887     0090                     	;# 
  1888     0091                     	;# 
  1889     0092                     	;# 
  1890     0093                     	;# 
  1891     0094                     	;# 
  1892     0095                     	;# 
  1893     0096                     	;# 
  1894     0098                     	;# 
  1895     0099                     	;# 
  1896     009A                     	;# 
  1897     009B                     	;# 
  1898     009B                     	;# 
  1899     009C                     	;# 
  1900     009D                     	;# 
  1901     009E                     	;# 
  1902     009F                     	;# 
  1903     010C                     	;# 
  1904     010D                     	;# 
  1905     010E                     	;# 
  1906     0111                     	;# 
  1907     0112                     	;# 
  1908     0113                     	;# 
  1909     0114                     	;# 
  1910     0115                     	;# 
  1911     0116                     	;# 
  1912     0117                     	;# 
  1913     0118                     	;# 
  1914     0119                     	;# 
  1915     011C                     	;# 
  1916     018C                     	;# 
  1917     018D                     	;# 
  1918     018E                     	;# 
  1919     0191                     	;# 
  1920     0191                     	;# 
  1921     0192                     	;# 
  1922     0193                     	;# 
  1923     0193                     	;# 
  1924     0194                     	;# 
  1925     0195                     	;# 
  1926     0196                     	;# 
  1927     0197                     	;# 
  1928     0199                     	;# 
  1929     0199                     	;# 
  1930     0199                     	;# 
  1931     019A                     	;# 
  1932     019A                     	;# 
  1933     019A                     	;# 
  1934     019B                     	;# 
  1935     019B                     	;# 
  1936     019B                     	;# 
  1937     019B                     	;# 
  1938     019B                     	;# 
  1939     019C                     	;# 
  1940     019C                     	;# 
  1941     019C                     	;# 
  1942     019D                     	;# 
  1943     019D                     	;# 
  1944     019D                     	;# 
  1945     019E                     	;# 
  1946     019E                     	;# 
  1947     019E                     	;# 
  1948     019F                     	;# 
  1949     019F                     	;# 
  1950     019F                     	;# 
  1951     019F                     	;# 
  1952     019F                     	;# 
  1953     020C                     	;# 
  1954     020D                     	;# 
  1955     020E                     	;# 
  1956     0211                     	;# 
  1957     0211                     	;# 
  1958     0212                     	;# 
  1959     0212                     	;# 
  1960     0213                     	;# 
  1961     0213                     	;# 
  1962     0214                     	;# 
  1963     0214                     	;# 
  1964     0215                     	;# 
  1965     0215                     	;# 
  1966     0215                     	;# 
  1967     0215                     	;# 
  1968     0216                     	;# 
  1969     0216                     	;# 
  1970     0217                     	;# 
  1971     0217                     	;# 
  1972     028C                     	;# 
  1973     028D                     	;# 
  1974     028E                     	;# 
  1975     0291                     	;# 
  1976     0291                     	;# 
  1977     0292                     	;# 
  1978     0293                     	;# 
  1979     0294                     	;# 
  1980     0298                     	;# 
  1981     0298                     	;# 
  1982     0299                     	;# 
  1983     029A                     	;# 
  1984     029B                     	;# 
  1985     029E                     	;# 
  1986     030C                     	;# 
  1987     030D                     	;# 
  1988     030E                     	;# 
  1989     038C                     	;# 
  1990     038D                     	;# 
  1991     038E                     	;# 
  1992     0391                     	;# 
  1993     0392                     	;# 
  1994     0393                     	;# 
  1995     0394                     	;# 
  1996     0395                     	;# 
  1997     0396                     	;# 
  1998     0397                     	;# 
  1999     0398                     	;# 
  2000     0399                     	;# 
  2001     040E                     	;# 
  2002     0413                     	;# 
  2003     0413                     	;# 
  2004     0414                     	;# 
  2005     0414                     	;# 
  2006     0415                     	;# 
  2007     0416                     	;# 
  2008     0417                     	;# 
  2009     0418                     	;# 
  2010     041A                     	;# 
  2011     041A                     	;# 
  2012     041B                     	;# 
  2013     041B                     	;# 
  2014     041C                     	;# 
  2015     041D                     	;# 
  2016     041E                     	;# 
  2017     041F                     	;# 
  2018     0493                     	;# 
  2019     0494                     	;# 
  2020     0495                     	;# 
  2021     0496                     	;# 
  2022     049A                     	;# 
  2023     049B                     	;# 
  2024     049C                     	;# 
  2025     049D                     	;# 
  2026     058C                     	;# 
  2027     058C                     	;# 
  2028     058D                     	;# 
  2029     058E                     	;# 
  2030     058E                     	;# 
  2031     058F                     	;# 
  2032     0590                     	;# 
  2033     0590                     	;# 
  2034     0591                     	;# 
  2035     0592                     	;# 
  2036     0592                     	;# 
  2037     0593                     	;# 
  2038     0594                     	;# 
  2039     0594                     	;# 
  2040     0595                     	;# 
  2041     0596                     	;# 
  2042     0596                     	;# 
  2043     0597                     	;# 
  2044     0598                     	;# 
  2045     0599                     	;# 
  2046     059A                     	;# 
  2047     059B                     	;# 
  2048     059B                     	;# 
  2049     059C                     	;# 
  2050     059D                     	;# 
  2051     060C                     	;# 
  2052     060C                     	;# 
  2053     060D                     	;# 
  2054     060E                     	;# 
  2055     060F                     	;# 
  2056     060F                     	;# 
  2057     0610                     	;# 
  2058     0611                     	;# 
  2059     0612                     	;# 
  2060     0613                     	;# 
  2061     0614                     	;# 
  2062     0617                     	;# 
  2063     0617                     	;# 
  2064     0618                     	;# 
  2065     0619                     	;# 
  2066     061A                     	;# 
  2067     061A                     	;# 
  2068     061B                     	;# 
  2069     061C                     	;# 
  2070     0691                     	;# 
  2071     0692                     	;# 
  2072     0693                     	;# 
  2073     0694                     	;# 
  2074     0695                     	;# 
  2075     0696                     	;# 
  2076     0697                     	;# 
  2077     0699                     	;# 
  2078     069A                     	;# 
  2079     0711                     	;# 
  2080     0712                     	;# 
  2081     0713                     	;# 
  2082     0714                     	;# 
  2083     0715                     	;# 
  2084     0718                     	;# 
  2085     0718                     	;# 
  2086     0719                     	;# 
  2087     071A                     	;# 
  2088     071A                     	;# 
  2089     071B                     	;# 
  2090     071C                     	;# 
  2091     071D                     	;# 
  2092     0791                     	;# 
  2093     0791                     	;# 
  2094     0792                     	;# 
  2095     0793                     	;# 
  2096     0793                     	;# 
  2097     0794                     	;# 
  2098     0795                     	;# 
  2099     0795                     	;# 
  2100     0796                     	;# 
  2101     0797                     	;# 
  2102     0797                     	;# 
  2103     0798                     	;# 
  2104     0799                     	;# 
  2105     079A                     	;# 
  2106     080C                     	;# 
  2107     080C                     	;# 
  2108     080D                     	;# 
  2109     080E                     	;# 
  2110     080E                     	;# 
  2111     080F                     	;# 
  2112     0810                     	;# 
  2113     0810                     	;# 
  2114     0811                     	;# 
  2115     0812                     	;# 
  2116     0812                     	;# 
  2117     0813                     	;# 
  2118     0814                     	;# 
  2119     0815                     	;# 
  2120     0816                     	;# 
  2121     0817                     	;# 
  2122     0818                     	;# 
  2123     0819                     	;# 
  2124     081A                     	;# 
  2125     081A                     	;# 
  2126     081B                     	;# 
  2127     081C                     	;# 
  2128     081C                     	;# 
  2129     081D                     	;# 
  2130     088C                     	;# 
  2131     088D                     	;# 
  2132     088E                     	;# 
  2133     088F                     	;# 
  2134     088F                     	;# 
  2135     0890                     	;# 
  2136     0891                     	;# 
  2137     0892                     	;# 
  2138     0893                     	;# 
  2139     0893                     	;# 
  2140     0894                     	;# 
  2141     0895                     	;# 
  2142     0896                     	;# 
  2143     0897                     	;# 
  2144     0897                     	;# 
  2145     0898                     	;# 
  2146     0899                     	;# 
  2147     0D8C                     	;# 
  2148     0D8C                     	;# 
  2149     0D8D                     	;# 
  2150     0D8E                     	;# 
  2151     0D8F                     	;# 
  2152     0D8F                     	;# 
  2153     0D90                     	;# 
  2154     0D91                     	;# 
  2155     0D92                     	;# 
  2156     0D92                     	;# 
  2157     0D93                     	;# 
  2158     0D94                     	;# 
  2159     0D95                     	;# 
  2160     0D95                     	;# 
  2161     0D96                     	;# 
  2162     0D97                     	;# 
  2163     0D98                     	;# 
  2164     0D99                     	;# 
  2165     0D9A                     	;# 
  2166     0D9B                     	;# 
  2167     0D9C                     	;# 
  2168     0D9D                     	;# 
  2169     0D9E                     	;# 
  2170     0D9E                     	;# 
  2171     0D9F                     	;# 
  2172     0DA0                     	;# 
  2173     0DA1                     	;# 
  2174     0DA1                     	;# 
  2175     0DA2                     	;# 
  2176     0DA3                     	;# 
  2177     0DA4                     	;# 
  2178     0DA4                     	;# 
  2179     0DA5                     	;# 
  2180     0DA6                     	;# 
  2181     0DA7                     	;# 
  2182     0DA7                     	;# 
  2183     0DA8                     	;# 
  2184     0DA9                     	;# 
  2185     0DAA                     	;# 
  2186     0DAB                     	;# 
  2187     0DAC                     	;# 
  2188     0DAD                     	;# 
  2189     0DAE                     	;# 
  2190     0DAF                     	;# 
  2191     0E0F                     	;# 
  2192     0E10                     	;# 
  2193     0E11                     	;# 
  2194     0E12                     	;# 
  2195     0E13                     	;# 
  2196     0E14                     	;# 
  2197     0E15                     	;# 
  2198     0E16                     	;# 
  2199     0E17                     	;# 
  2200     0E18                     	;# 
  2201     0E19                     	;# 
  2202     0E1A                     	;# 
  2203     0E1B                     	;# 
  2204     0E1C                     	;# 
  2205     0E1D                     	;# 
  2206     0E1E                     	;# 
  2207     0E1F                     	;# 
  2208     0E20                     	;# 
  2209     0E21                     	;# 
  2210     0E22                     	;# 
  2211     0E23                     	;# 
  2212     0E24                     	;# 
  2213     0E25                     	;# 
  2214     0E26                     	;# 
  2215     0E27                     	;# 
  2216     0E28                     	;# 
  2217     0E29                     	;# 
  2218     0E2A                     	;# 
  2219     0E2B                     	;# 
  2220     0E2C                     	;# 
  2221     0E2D                     	;# 
  2222     0E2E                     	;# 
  2223     0E90                     	;# 
  2224     0E91                     	;# 
  2225     0E92                     	;# 
  2226     0E94                     	;# 
  2227     0E95                     	;# 
  2228     0E9C                     	;# 
  2229     0E9D                     	;# 
  2230     0E9E                     	;# 
  2231     0E9F                     	;# 
  2232     0EA0                     	;# 
  2233     0EA1                     	;# 
  2234     0EA2                     	;# 
  2235     0EA3                     	;# 
  2236     0EA4                     	;# 
  2237     0EA5                     	;# 
  2238     0EA6                     	;# 
  2239     0EA7                     	;# 
  2240     0F0F                     	;# 
  2241     0F10                     	;# 
  2242     0F11                     	;# 
  2243     0F12                     	;# 
  2244     0F13                     	;# 
  2245     0F14                     	;# 
  2246     0F15                     	;# 
  2247     0F16                     	;# 
  2248     0F17                     	;# 
  2249     0F18                     	;# 
  2250     0F19                     	;# 
  2251     0F1A                     	;# 
  2252     0F1B                     	;# 
  2253     0F1C                     	;# 
  2254     0F1D                     	;# 
  2255     0F1E                     	;# 
  2256     0F1F                     	;# 
  2257     0F20                     	;# 
  2258     0F21                     	;# 
  2259     0F22                     	;# 
  2260     0F23                     	;# 
  2261     0F24                     	;# 
  2262     0F25                     	;# 
  2263     0F26                     	;# 
  2264     0F27                     	;# 
  2265     0F28                     	;# 
  2266     0F29                     	;# 
  2267     0F2A                     	;# 
  2268     0F2B                     	;# 
  2269     0F2C                     	;# 
  2270     0F2D                     	;# 
  2271     0F2E                     	;# 
  2272     0F2F                     	;# 
  2273     0F30                     	;# 
  2274     0F31                     	;# 
  2275     0F32                     	;# 
  2276     0F33                     	;# 
  2277     0F34                     	;# 
  2278     0F35                     	;# 
  2279     0F36                     	;# 
  2280     0F37                     	;# 
  2281     0FE4                     	;# 
  2282     0FE5                     	;# 
  2283     0FE6                     	;# 
  2284     0FE7                     	;# 
  2285     0FE8                     	;# 
  2286     0FE9                     	;# 
  2287     0FEA                     	;# 
  2288     0FEB                     	;# 
  2289     0FED                     	;# 
  2290     0FEE                     	;# 
  2291     0FEF                     	;# 
  2292                           
  2293                           	psect	idataBANK1
  2294     0338                     __pidataBANK1:
  2295                           
  2296                           ;initializer for main@F9995
  2297     0338  3448               	retlw	72
  2298     0339  3465               	retlw	101
  2299     033A  346C               	retlw	108
  2300     033B  346C               	retlw	108
  2301     033C  346F               	retlw	111
  2302     033D  3420               	retlw	32
  2303     033E  3457               	retlw	87
  2304     033F  346F               	retlw	111
  2305     0340  3472               	retlw	114
  2306     0341  346C               	retlw	108
  2307     0342  3464               	retlw	100
  2308     0343  3400               	retlw	0
  2309     0344  3400               	retlw	0
  2310     0345  3400               	retlw	0
  2311     0346  3400               	retlw	0
  2312     0347  3400               	retlw	0
  2313     0348  3400               	retlw	0
  2314     0349  3400               	retlw	0
  2315     034A  3400               	retlw	0
  2316     034B  3400               	retlw	0
  2317                           
  2318                           ;initializer for stoa@F1144
  2319     034C  3428               	retlw	40
  2320     034D  346E               	retlw	110
  2321     034E  3475               	retlw	117
  2322     034F  346C               	retlw	108
  2323     0350  346C               	retlw	108
  2324     0351  3429               	retlw	41
  2325     0352  3400               	retlw	0
  2326                           
  2327                           	psect	nvBANK0
  2328     006C                     __pnvBANK0:
  2329     006C                     _EUSART_FramingErrorHandler:
  2330     006C                     	ds	2
  2331     006E                     _EUSART_RxDefaultInterruptHandler:
  2332     006E                     	ds	2
  2333                           
  2334                           	psect	nvBANK1
  2335     00E3                     __pnvBANK1:
  2336     00E3                     _EUSART_ErrorHandler:
  2337     00E3                     	ds	2
  2338     00E5                     _EUSART_OverrunErrorHandler:
  2339     00E5                     	ds	2
  2340     000B                     _INTCONbits	set	11
  2341     0010                     _PIR1bits	set	16
  2342     0090                     _PIE1bits	set	144
  2343     0098                     _OSCTUNE	set	152
  2344     0099                     _OSCCON	set	153
  2345     0095                     _OPTION_REGbits	set	149
  2346     008E                     _TRISC	set	142
  2347     008D                     _TRISB	set	141
  2348     008C                     _TRISA	set	140
  2349     010E                     _LATCbits	set	270
  2350     010C                     _LATAbits	set	268
  2351     0116                     _BORCON	set	278
  2352     010E                     _LATC	set	270
  2353     010D                     _LATB	set	269
  2354     010C                     _LATA	set	268
  2355     0199                     _RC1REG	set	409
  2356     019D                     _RC1STAbits	set	413
  2357     019A                     _TX1REG	set	410
  2358     019E                     _TX1STAbits	set	414
  2359     019C                     _SPBRGH	set	412
  2360     019B                     _SPBRGL	set	411
  2361     019E                     _TX1STA	set	414
  2362     019D                     _RC1STA	set	413
  2363     019F                     _BAUD1CON	set	415
  2364     018C                     _ANSELA	set	396
  2365     018D                     _ANSELB	set	397
  2366     018E                     _ANSELC	set	398
  2367     020E                     _WPUC	set	526
  2368     020C                     _WPUA	set	524
  2369     020D                     _WPUB	set	525
  2370     028E                     _ODCONC	set	654
  2371     028D                     _ODCONB	set	653
  2372     028C                     _ODCONA	set	652
  2373     030E                     _SLRCONC	set	782
  2374     030D                     _SLRCONB	set	781
  2375     030C                     _SLRCONA	set	780
  2376     038E                     _INLVLC	set	910
  2377     038D                     _INLVLB	set	909
  2378     038C                     _INLVLA	set	908
  2379     0E24                     _RXPPS	set	3620
  2380     0E9F                     _RB7PPS	set	3743
  2381                           
  2382                           	psect	stringtext1
  2383     03D5                     __pstringtext1:
  2384     03D5                     STR_2:
  2385     03D5  346C               	retlw	108	;'l'
  2386     03D6  346C               	retlw	108	;'l'
  2387     03D7  3473               	retlw	115	;'s'
  2388     03D8  3400               	retlw	0
  2389                           
  2390                           	psect	stringtext2
  2391     03D9                     __pstringtext2:
  2392     03D9                     STR_1:
  2393     03D9  3425               	retlw	37	;'%'
  2394     03DA  3473               	retlw	115	;'s'
  2395     03DB  340A               	retlw	10
  2396     03DC  3400               	retlw	0
  2397                           
  2398                           	psect	stringtext3
  2399     0000                     __pstringtext3:
  2400     03D5                     
  2401                           	psect	cinit
  2402     001D                     start_initialization:	
  2403                           ; #config settings
  2404                           
  2405     001D                     __initialization:
  2406                           
  2407                           ; Initialize objects allocated to BANK1
  2408     001D  3038               	movlw	low __pidataBANK1
  2409     001E  0084               	movwf	4
  2410     001F  3083               	movlw	(high __pidataBANK1)| (0+128)
  2411     0020  0085               	movwf	5
  2412     0021  30C8               	movlw	low __pdataBANK1
  2413     0022  0086               	movwf	6
  2414     0023  3000               	movlw	high __pdataBANK1
  2415     0024  0087               	movwf	7
  2416     0025  301B               	movlw	27
  2417     0026  3183  23AB  3180   	fcall	init_ram
  2418                           
  2419                           ; Clear objects allocated to COMMON
  2420     0029  01FC               	clrf	__pbssCOMMON& (0+127)
  2421                           
  2422                           ; Clear objects allocated to BANK0
  2423     002A  305C               	movlw	low __pbssBANK0
  2424     002B  0084               	movwf	4
  2425     002C  3000               	movlw	high __pbssBANK0
  2426     002D  0085               	movwf	5
  2427     002E  3010               	movlw	16
  2428     002F  3183  23B1  3180   	fcall	clear_ram0
  2429                           
  2430                           ; Clear objects allocated to BANK1
  2431     0032  30A0               	movlw	low __pbssBANK1
  2432     0033  0084               	movwf	4
  2433     0034  3000               	movlw	high __pbssBANK1
  2434     0035  0085               	movwf	5
  2435     0036  3028               	movlw	40
  2436     0037  3183  23B1  3180   	fcall	clear_ram0
  2437     003A                     end_of_initialization:	
  2438                           ;End of C runtime variable initialization code
  2439                           
  2440     003A                     __end_of__initialization:
  2441     003A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2442     003B  0020               	movlb	0
  2443     003C  3181  2973         	ljmp	_main	;jump to C main() function
  2444                           
  2445                           	psect	bssCOMMON
  2446     007C                     __pbssCOMMON:
  2447     007C                     _eusartRxHead:
  2448     007C                     	ds	1
  2449                           
  2450                           	psect	bssBANK0
  2451     005C                     __pbssBANK0:
  2452     005C                     _eusartRxStatusBuffer:
  2453     005C                     	ds	8
  2454     0064                     _width:
  2455     0064                     	ds	2
  2456     0066                     _prec:
  2457     0066                     	ds	2
  2458     0068                     _flags:
  2459     0068                     	ds	1
  2460     0069                     _eusartRxLastError:
  2461     0069                     	ds	1
  2462     006A                     _eusartRxCount:
  2463     006A                     	ds	1
  2464     006B                     _eusartRxTail:
  2465     006B                     	ds	1
  2466                           
  2467                           	psect	bssBANK1
  2468     00A0                     __pbssBANK1:
  2469     00A0                     _dbuf:
  2470     00A0                     	ds	32
  2471     00C0                     _eusartRxBuffer:
  2472     00C0                     	ds	8
  2473                           
  2474                           	psect	dataBANK1
  2475     00C8                     __pdataBANK1:
  2476     00C8                     main@F9995:
  2477     00C8                     	ds	20
  2478     00DC                     stoa@F1144:
  2479     00DC                     	ds	7
  2480                           
  2481                           	psect	inittext
  2482     03AB                     init_ram:
  2483     03AB  00FE               	movwf	btemp
  2484     03AC                     initloop:
  2485     03AC  0012               	moviw fsr0++
  2486     03AD  001E               	movwi fsr1++
  2487     03AE  0BFE               	decfsz	btemp,f
  2488     03AF  2BAC               	goto	initloop
  2489     03B0  3400               	retlw	0
  2490                           
  2491                           	psect	clrtext
  2492     03B1                     clear_ram0:	
  2493                           ;	Called with FSR0 containing the base address, and
  2494                           ;	WREG with the size to clear
  2495                           
  2496     03B1  0064               	clrwdt	;clear the watchdog before getting into this loop
  2497     03B2                     clrloop0:
  2498     03B2  0180               	clrf	0	;clear RAM location pointed to by FSR
  2499     03B3  3101               	addfsr 0,1
  2500     03B4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2501     03B5  2BB2               	goto	clrloop0	;have we reached the end yet?
  2502     03B6  3400               	retlw	0	;all done for this memory range, return
  2503                           
  2504                           	psect	cstackCOMMON
  2505     0070                     __pcstackCOMMON:
  2506     0070                     ?_OSCILLATOR_Initialize:
  2507     0070                     ?_EUSART_Initialize:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510     0070                     ?_EUSART_Write:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513     0070                     ?_EUSART_Receive_ISR:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516     0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519     0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522     0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525     0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528     0070                     ?_EUSART_DefaultErrorHandler:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531     0070                     ?_EUSART_RxDataHandler:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534     0070                     ??_EUSART_RxDataHandler:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537     0070                     ?_PIN_MANAGER_Initialize:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540     0070                     ?_SYSTEM_Initialize:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543     0070                     ?_main:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546     0070                     ?_putch:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549     0070                     ?_INTERRUPT_InterruptManager:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552                           
  2553                           ; 1 bytes @ 0x0
  2554     0070                     	ds	1
  2555     0071                     ??_OSCILLATOR_Initialize:
  2556     0071                     ??_EUSART_Write:	
  2557                           ; 1 bytes @ 0x1
  2558                           
  2559     0071                     ?_EUSART_SetRxInterruptHandler:	
  2560                           ; 1 bytes @ 0x1
  2561                           
  2562     0071                     ??_EUSART_Receive_ISR:	
  2563                           ; 1 bytes @ 0x1
  2564                           
  2565     0071                     ?_EUSART_SetFramingErrorHandler:	
  2566                           ; 1 bytes @ 0x1
  2567                           
  2568     0071                     ?_EUSART_SetOverrunErrorHandler:	
  2569                           ; 1 bytes @ 0x1
  2570                           
  2571     0071                     ?_EUSART_SetErrorHandler:	
  2572                           ; 1 bytes @ 0x1
  2573                           
  2574     0071                     ??_EUSART_DefaultErrorHandler:	
  2575                           ; 1 bytes @ 0x1
  2576                           
  2577     0071                     ??_PIN_MANAGER_Initialize:	
  2578                           ; 1 bytes @ 0x1
  2579                           
  2580     0071                     ??_INTERRUPT_InterruptManager:	
  2581                           ; 1 bytes @ 0x1
  2582                           
  2583     0071                     ?_strlen:	
  2584                           ; 1 bytes @ 0x1
  2585                           
  2586     0071                     ?_strncmp:	
  2587                           ; 2 bytes @ 0x1
  2588                           
  2589     0071                     EUSART_Write@txData:	
  2590                           ; 2 bytes @ 0x1
  2591                           
  2592     0071                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2593                           ; 1 bytes @ 0x1
  2594                           
  2595     0071                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2596                           ; 2 bytes @ 0x1
  2597                           
  2598     0071                     EUSART_SetErrorHandler@interruptHandler:	
  2599                           ; 2 bytes @ 0x1
  2600                           
  2601     0071                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2602                           ; 2 bytes @ 0x1
  2603                           
  2604     0071                     strncmp@_l:	
  2605                           ; 2 bytes @ 0x1
  2606                           
  2607                           
  2608                           ; 2 bytes @ 0x1
  2609     0071                     	ds	1
  2610     0072                     ??_putch:
  2611     0072                     putch@txData:	
  2612                           ; 1 bytes @ 0x2
  2613                           
  2614                           
  2615                           ; 1 bytes @ 0x2
  2616     0072                     	ds	1
  2617     0073                     ??_EUSART_Initialize:
  2618     0073                     ??_EUSART_SetRxInterruptHandler:	
  2619                           ; 1 bytes @ 0x3
  2620                           
  2621     0073                     ??_EUSART_SetFramingErrorHandler:	
  2622                           ; 1 bytes @ 0x3
  2623                           
  2624     0073                     ??_EUSART_SetOverrunErrorHandler:	
  2625                           ; 1 bytes @ 0x3
  2626                           
  2627     0073                     ??_EUSART_SetErrorHandler:	
  2628                           ; 1 bytes @ 0x3
  2629                           
  2630     0073                     ??_strlen:	
  2631                           ; 1 bytes @ 0x3
  2632                           
  2633     0073                     ??_SYSTEM_Initialize:	
  2634                           ; 1 bytes @ 0x3
  2635                           
  2636     0073                     ?_fputc:	
  2637                           ; 1 bytes @ 0x3
  2638                           
  2639     0073                     fputc@c:	
  2640                           ; 2 bytes @ 0x3
  2641                           
  2642     0073                     strncmp@_r:	
  2643                           ; 2 bytes @ 0x3
  2644                           
  2645                           
  2646                           ; 2 bytes @ 0x3
  2647     0073                     	ds	1
  2648     0074                     strlen@a:
  2649                           
  2650                           ; 1 bytes @ 0x4
  2651     0074                     	ds	1
  2652     0075                     fputc@fp:
  2653     0075                     strlen@s:	
  2654                           ; 1 bytes @ 0x5
  2655                           
  2656     0075                     strncmp@n:	
  2657                           ; 1 bytes @ 0x5
  2658                           
  2659                           
  2660                           ; 2 bytes @ 0x5
  2661     0075                     	ds	1
  2662     0076                     ??_fputc:
  2663                           
  2664                           ; 1 bytes @ 0x6
  2665     0076                     	ds	1
  2666     0077                     ??_strncmp:
  2667                           
  2668                           ; 1 bytes @ 0x7
  2669     0077                     	ds	1
  2670     0078                     strncmp@l:
  2671                           
  2672                           ; 2 bytes @ 0x8
  2673     0078                     	ds	2
  2674     007A                     strncmp@r:
  2675                           
  2676                           ; 2 bytes @ 0xA
  2677     007A                     	ds	1
  2678     007B                     ?_stoa:
  2679     007B                     stoa@s:	
  2680                           ; 1 bytes @ 0xB
  2681                           
  2682                           
  2683                           ; 1 bytes @ 0xB
  2684     007B                     	ds	1
  2685     007C                     ??_printf:
  2686                           
  2687                           	psect	cstackBANK0
  2688     0020                     __pcstackBANK0:	
  2689                           ; 1 bytes @ 0xC
  2690                           
  2691     0020                     ??_stoa:
  2692                           
  2693                           ; 1 bytes @ 0x0
  2694     0020                     	ds	2
  2695     0022                     stoa@nuls:
  2696                           
  2697                           ; 7 bytes @ 0x2
  2698     0022                     	ds	7
  2699     0029                     stoa@w:
  2700                           
  2701                           ; 2 bytes @ 0x9
  2702     0029                     	ds	2
  2703     002B                     stoa@i:
  2704                           
  2705                           ; 2 bytes @ 0xB
  2706     002B                     	ds	2
  2707     002D                     stoa@fp:
  2708                           
  2709                           ; 1 bytes @ 0xD
  2710     002D                     	ds	1
  2711     002E                     stoa@l:
  2712                           
  2713                           ; 2 bytes @ 0xE
  2714     002E                     	ds	2
  2715     0030                     stoa@cp:
  2716                           
  2717                           ; 1 bytes @ 0x10
  2718     0030                     	ds	1
  2719     0031                     stoa@p:
  2720                           
  2721                           ; 2 bytes @ 0x11
  2722     0031                     	ds	2
  2723     0033                     ?_vfpfcnvrt:
  2724     0033                     vfpfcnvrt@fmt:	
  2725                           ; 1 bytes @ 0x13
  2726                           
  2727                           
  2728                           ; 1 bytes @ 0x13
  2729     0033                     	ds	1
  2730     0034                     vfpfcnvrt@ap:
  2731                           
  2732                           ; 1 bytes @ 0x14
  2733     0034                     	ds	1
  2734     0035                     ??_vfpfcnvrt:
  2735                           
  2736                           ; 1 bytes @ 0x15
  2737     0035                     	ds	4
  2738     0039                     _vfpfcnvrt$896:
  2739                           
  2740                           ; 2 bytes @ 0x19
  2741     0039                     	ds	2
  2742     003B                     vfpfcnvrt@fp:
  2743                           
  2744                           ; 1 bytes @ 0x1B
  2745     003B                     	ds	1
  2746     003C                     ?_vfprintf:
  2747     003C                     vfprintf@fmt:	
  2748                           ; 2 bytes @ 0x1C
  2749                           
  2750                           
  2751                           ; 2 bytes @ 0x1C
  2752     003C                     	ds	2
  2753     003E                     vfprintf@ap:
  2754                           
  2755                           ; 1 bytes @ 0x1E
  2756     003E                     	ds	1
  2757     003F                     ??_vfprintf:
  2758                           
  2759                           ; 1 bytes @ 0x1F
  2760     003F                     	ds	1
  2761     0040                     vfprintf@fp:
  2762                           
  2763                           ; 1 bytes @ 0x20
  2764     0040                     	ds	1
  2765     0041                     vfprintf@cfmt:
  2766                           
  2767                           ; 2 bytes @ 0x21
  2768     0041                     	ds	2
  2769     0043                     ?_printf:
  2770     0043                     printf@fmt:	
  2771                           ; 2 bytes @ 0x23
  2772                           
  2773                           
  2774                           ; 2 bytes @ 0x23
  2775     0043                     	ds	3
  2776     0046                     printf@ap:
  2777                           
  2778                           ; 1 bytes @ 0x26
  2779     0046                     	ds	1
  2780     0047                     ??_main:
  2781                           
  2782                           ; 1 bytes @ 0x27
  2783     0047                     	ds	1
  2784     0048                     main@array:
  2785                           
  2786                           ; 20 bytes @ 0x28
  2787     0048                     	ds	20
  2788                           
  2789                           	psect	maintext
  2790     0173                     __pmaintext:	
  2791 ;;
  2792 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2793 ;;
  2794 ;; *************** function _main *****************
  2795 ;; Defined at:
  2796 ;;		line 49 in file "main.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  array          20   40[BANK0 ] unsigned char [20]
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      void 
  2803 ;; Registers used:
  2804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : B1F/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2811 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2813 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2814 ;;Total ram usage:       21 bytes
  2815 ;; Hardware stack levels required when called: 11
  2816 ;; This function calls:
  2817 ;;		_EUSART_Write
  2818 ;;		_SYSTEM_Initialize
  2819 ;;		_printf
  2820 ;; This function is called by:
  2821 ;;		Startup code after reset
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825     0173                     _main:	
  2826                           ;psect for function _main
  2827                           
  2828     0173                     l1513:	
  2829                           ;incstack = 0
  2830                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2831                           
  2832                           
  2833                           ;main.c: 52:     SYSTEM_Initialize();
  2834     0173  3183  239A  3181   	fcall	_SYSTEM_Initialize
  2835     0176                     l1515:
  2836                           
  2837                           ;main.c: 70:     {;main.c: 71:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2838     0176  3041               	movlw	65
  2839     0177  0020               	movlb	0	; select bank0
  2840     0178  00C7               	movwf	??_main
  2841     0179  30EE               	movlw	238
  2842     017A                     u937:
  2843     017A  0B89               	decfsz	9,f
  2844     017B  297A               	goto	u937
  2845     017C  0BC7               	decfsz	??_main,f
  2846     017D  297A               	goto	u937
  2847     017E  0000               	nop
  2848     017F                     l1517:
  2849     017F  1003               	clrc
  2850     0180  0022               	movlb	2	; select bank2
  2851     0181  1E8C               	btfss	12,5	;volatile
  2852     0182  1403               	setc
  2853     0183  1803               	btfsc	3,0
  2854     0184  2986               	goto	u841
  2855     0185  2989               	goto	u840
  2856     0186                     u841:
  2857     0186  0022               	movlb	2	; select bank2
  2858     0187  168C               	bsf	12,5	;volatile
  2859     0188  298B               	goto	u854
  2860     0189                     u840:
  2861     0189  0022               	movlb	2	; select bank2
  2862     018A  128C               	bcf	12,5	;volatile
  2863     018B                     u854:
  2864     018B                     l1519:
  2865                           
  2866                           ;main.c: 73:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2867     018B  3041               	movlw	65
  2868     018C  0020               	movlb	0	; select bank0
  2869     018D  00C7               	movwf	??_main
  2870     018E  30EE               	movlw	238
  2871     018F                     u947:
  2872     018F  0B89               	decfsz	9,f
  2873     0190  298F               	goto	u947
  2874     0191  0BC7               	decfsz	??_main,f
  2875     0192  298F               	goto	u947
  2876     0193  0000               	nop
  2877     0194                     l1521:
  2878     0194  1003               	clrc
  2879     0195  0022               	movlb	2	; select bank2
  2880     0196  1C8C               	btfss	12,1	;volatile
  2881     0197  1403               	setc
  2882     0198  1803               	btfsc	3,0
  2883     0199  299B               	goto	u861
  2884     019A  299E               	goto	u860
  2885     019B                     u861:
  2886     019B  0022               	movlb	2	; select bank2
  2887     019C  148C               	bsf	12,1	;volatile
  2888     019D  29A0               	goto	u874
  2889     019E                     u860:
  2890     019E  0022               	movlb	2	; select bank2
  2891     019F  108C               	bcf	12,1	;volatile
  2892     01A0                     u874:
  2893     01A0                     l1523:
  2894                           
  2895                           ;main.c: 75:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2896     01A0  3041               	movlw	65
  2897     01A1  0020               	movlb	0	; select bank0
  2898     01A2  00C7               	movwf	??_main
  2899     01A3  30EE               	movlw	238
  2900     01A4                     u957:
  2901     01A4  0B89               	decfsz	9,f
  2902     01A5  29A4               	goto	u957
  2903     01A6  0BC7               	decfsz	??_main,f
  2904     01A7  29A4               	goto	u957
  2905     01A8  0000               	nop
  2906     01A9                     l1525:
  2907     01A9  1003               	clrc
  2908     01AA  0022               	movlb	2	; select bank2
  2909     01AB  1D0C               	btfss	12,2	;volatile
  2910     01AC  1403               	setc
  2911     01AD  1803               	btfsc	3,0
  2912     01AE  29B0               	goto	u881
  2913     01AF  29B3               	goto	u880
  2914     01B0                     u881:
  2915     01B0  0022               	movlb	2	; select bank2
  2916     01B1  150C               	bsf	12,2	;volatile
  2917     01B2  29B5               	goto	u894
  2918     01B3                     u880:
  2919     01B3  0022               	movlb	2	; select bank2
  2920     01B4  110C               	bcf	12,2	;volatile
  2921     01B5                     u894:
  2922     01B5                     l1527:
  2923                           
  2924                           ;main.c: 77:         _delay((unsigned long)((50)*(4000000/4000.0)));
  2925     01B5  3041               	movlw	65
  2926     01B6  0020               	movlb	0	; select bank0
  2927     01B7  00C7               	movwf	??_main
  2928     01B8  30EE               	movlw	238
  2929     01B9                     u967:
  2930     01B9  0B89               	decfsz	9,f
  2931     01BA  29B9               	goto	u967
  2932     01BB  0BC7               	decfsz	??_main,f
  2933     01BC  29B9               	goto	u967
  2934     01BD  0000               	nop
  2935     01BE                     l1529:
  2936     01BE  1003               	clrc
  2937     01BF  0022               	movlb	2	; select bank2
  2938     01C0  1E8E               	btfss	14,5	;volatile
  2939     01C1  1403               	setc
  2940     01C2  1803               	btfsc	3,0
  2941     01C3  29C5               	goto	u901
  2942     01C4  29C8               	goto	u900
  2943     01C5                     u901:
  2944     01C5  0022               	movlb	2	; select bank2
  2945     01C6  168E               	bsf	14,5	;volatile
  2946     01C7  29CA               	goto	u914
  2947     01C8                     u900:
  2948     01C8  0022               	movlb	2	; select bank2
  2949     01C9  128E               	bcf	14,5	;volatile
  2950     01CA                     u914:
  2951     01CA                     l1535:
  2952                           
  2953                           ;main.c: 86:         char array[20] = "Hello World";
  2954     01CA  30C8               	movlw	low main@F9995
  2955     01CB  0086               	movwf	6
  2956     01CC  3000               	movlw	high main@F9995
  2957     01CD  0087               	movwf	7
  2958     01CE  3048               	movlw	low main@array
  2959     01CF  0084               	movwf	4
  2960     01D0  3000               	movlw	high main@array
  2961     01D1  0085               	movwf	5
  2962     01D2  3014               	movlw	20
  2963     01D3  0020               	movlb	0	; select bank0
  2964     01D4  00C7               	movwf	??_main
  2965     01D5                     u920:
  2966     01D5  0016               	moviw fsr1++
  2967     01D6  001A               	movwi fsr0++
  2968     01D7  0BC7               	decfsz	??_main,f
  2969     01D8  29D5               	goto	u920
  2970     01D9                     l1537:
  2971                           
  2972                           ;main.c: 87:         printf("%s\n",array);
  2973     01D9  30D9               	movlw	low (STR_1| (0+32768))
  2974     01DA  00C3               	movwf	printf@fmt
  2975     01DB  3083               	movlw	high (STR_1| (0+32768))
  2976     01DC  00C4               	movwf	printf@fmt+1
  2977     01DD  3048               	movlw	(low (main@array| 0))& (0+255)
  2978     01DE  00C5               	movwf	low ((?_printf| 0+2))
  2979     01DF  3183  2382  3181   	fcall	_printf
  2980     01E2  2976               	goto	l1515
  2981     01E3  3180  281B         	ljmp	start
  2982     01E5                     __end_of_main:
  2983                           
  2984                           	psect	text1
  2985     0382                     __ptext1:	
  2986 ;; *************** function _printf *****************
  2987 ;; Defined at:
  2988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  fmt             2   35[BANK0 ] PTR const unsigned char 
  2991 ;;		 -> STR_1(4), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  ret             2    0        int 
  2994 ;;  ap              1   38[BANK0 ] PTR void [1]
  2995 ;;		 -> ?_printf(2), 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2   35[BANK0 ] int 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:        4 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 10
  3012 ;; This function calls:
  3013 ;;		_vfprintf
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019     0382                     _printf:	
  3020                           ;psect for function _printf
  3021                           
  3022     0382                     l1507:	
  3023                           ;incstack = 0
  3024                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3025                           
  3026     0382  3045               	movlw	(low ((?_printf| 0+2)))& (0+255)
  3027     0383  0020               	movlb	0	; select bank0
  3028     0384  00C6               	movwf	printf@ap
  3029     0385                     l1509:
  3030     0385  0844               	movf	printf@fmt+1,w
  3031     0386  00BD               	movwf	vfprintf@fmt+1
  3032     0387  0843               	movf	printf@fmt,w
  3033     0388  00BC               	movwf	vfprintf@fmt
  3034     0389  3046               	movlw	(low (printf@ap| 0))& (0+255)
  3035     038A  00BE               	movwf	vfprintf@ap
  3036     038B  3000               	movlw	0
  3037     038C  3183  231C  3183   	fcall	_vfprintf
  3038     038F                     l781:
  3039     038F  0008               	return
  3040     0390                     __end_of_printf:
  3041                           
  3042                           	psect	text2
  3043     031C                     __ptext2:	
  3044 ;; *************** function _vfprintf *****************
  3045 ;; Defined at:
  3046 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  fp              1    wreg     PTR struct _IO_FILE
  3049 ;;		 -> NULL(0), 
  3050 ;;  fmt             2   28[BANK0 ] PTR const unsigned char 
  3051 ;;		 -> STR_1(4), 
  3052 ;;  ap              1   30[BANK0 ] PTR PTR void 
  3053 ;;		 -> printf@ap(1), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  fp              1   32[BANK0 ] PTR struct _IO_FILE
  3056 ;;		 -> NULL(0), 
  3057 ;;  cfmt            2   33[BANK0 ] PTR unsigned char 
  3058 ;;		 -> STR_1(4), 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  2   28[BANK0 ] int 
  3061 ;; Registers used:
  3062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3068 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3071 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3072 ;;Total ram usage:        7 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 9
  3075 ;; This function calls:
  3076 ;;		_vfpfcnvrt
  3077 ;; This function is called by:
  3078 ;;		_printf
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082     031C                     _vfprintf:	
  3083                           ;psect for function _vfprintf
  3084                           
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3088                           ;vfprintf@fp stored from wreg
  3089     031C  0020               	movlb	0	; select bank0
  3090     031D  00C0               	movwf	vfprintf@fp
  3091     031E                     l1497:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  3094     031E  083D               	movf	vfprintf@fmt+1,w
  3095     031F  00C2               	movwf	vfprintf@cfmt+1
  3096     0320  083C               	movf	vfprintf@fmt,w
  3097     0321  00C1               	movwf	vfprintf@cfmt
  3098                           
  3099                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3100     0322  2B2B               	goto	l1501
  3101     0323                     l1499:
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3104     0323  3041               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  3105     0324  00B3               	movwf	vfpfcnvrt@fmt
  3106     0325  083E               	movf	vfprintf@ap,w
  3107     0326  00B4               	movwf	vfpfcnvrt@ap
  3108     0327  0840               	movf	vfprintf@fp,w
  3109     0328  3180  203E  3183   	fcall	_vfpfcnvrt
  3110     032B                     l1501:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  3113     032B  0020               	movlb	0	; select bank0
  3114     032C  0841               	movf	vfprintf@cfmt,w
  3115     032D  0084               	movwf	4
  3116     032E  0842               	movf	vfprintf@cfmt+1,w
  3117     032F  0085               	movwf	5
  3118     0330  0012               	moviw fsr0++
  3119     0331  1D03               	btfss	3,2
  3120     0332  2B34               	goto	u831
  3121     0333  2B35               	goto	u830
  3122     0334                     u831:
  3123     0334  2B23               	goto	l1499
  3124     0335                     u830:
  3125     0335                     l1503:
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3128     0335  01BC               	clrf	?_vfprintf
  3129     0336  01BD               	clrf	?_vfprintf+1
  3130     0337                     l844:
  3131     0337  0008               	return
  3132     0338                     __end_of_vfprintf:
  3133                           
  3134                           	psect	text3
  3135     003E                     __ptext3:	
  3136 ;; *************** function _vfpfcnvrt *****************
  3137 ;; Defined at:
  3138 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  fp              1    wreg     PTR struct _IO_FILE
  3141 ;;		 -> NULL(0), 
  3142 ;;  fmt             1   19[BANK0 ] PTR PTR unsigned char 
  3143 ;;		 -> vfprintf@cfmt(2), 
  3144 ;;  ap              1   20[BANK0 ] PTR PTR void 
  3145 ;;		 -> printf@ap(1), 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  3148 ;;		 -> NULL(0), 
  3149 ;;  convarg         8    0        struct .
  3150 ;;  i               2    0        int 
  3151 ;;  done            2    0        int 
  3152 ;;  cp              2    0        PTR unsigned char 
  3153 ;;  c               1    0        unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3164 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3165 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3166 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3167 ;;Total ram usage:        9 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 8
  3170 ;; This function calls:
  3171 ;;		_fputc
  3172 ;;		_stoa
  3173 ;;		_strncmp
  3174 ;; This function is called by:
  3175 ;;		_vfprintf
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179     003E                     _vfpfcnvrt:	
  3180                           ;psect for function _vfpfcnvrt
  3181                           
  3182                           
  3183                           ;incstack = 0
  3184                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3185                           ;vfpfcnvrt@fp stored from wreg
  3186     003E  0020               	movlb	0	; select bank0
  3187     003F  00BB               	movwf	vfpfcnvrt@fp
  3188     0040                     l1301:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3191     0040  0833               	movf	vfpfcnvrt@fmt,w
  3192     0041  0086               	movwf	6
  3193     0042  0187               	clrf	7
  3194     0043  3F40               	moviw [0]fsr1
  3195     0044  00B5               	movwf	??_vfpfcnvrt
  3196     0045  3F41               	moviw [1]fsr1
  3197     0046  00B6               	movwf	??_vfpfcnvrt+1
  3198     0047  0835               	movf	??_vfpfcnvrt,w
  3199     0048  0084               	movwf	4
  3200     0049  0836               	movf	??_vfpfcnvrt+1,w
  3201     004A  0085               	movwf	5
  3202     004B  0012               	moviw fsr0++
  3203     004C  3A25               	xorlw	37
  3204     004D  1D03               	btfss	3,2
  3205     004E  2850               	goto	u611
  3206     004F  2851               	goto	u610
  3207     0050                     u611:
  3208     0050  28C9               	goto	l1329
  3209     0051                     u610:
  3210     0051                     l1303:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3213     0051  0833               	movf	vfpfcnvrt@fmt,w
  3214     0052  0086               	movwf	6
  3215     0053  0187               	clrf	7
  3216     0054  3001               	movlw	1
  3217     0055  0781               	addwf	1,f
  3218     0056  3141               	addfsr 1,1
  3219     0057  1803               	skipnc
  3220     0058  0A81               	incf	1,f
  3221     0059                     l1305:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3224     0059  01E4               	clrf	_width
  3225     005A  01E5               	clrf	_width+1
  3226     005B  1003               	clrc
  3227     005C  3000               	movlw	0
  3228     005D  1803               	btfsc	3,0
  3229     005E  3001               	movlw	1
  3230     005F  00E8               	movwf	_flags
  3231     0060                     l1307:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3234     0060  30FF               	movlw	255
  3235     0061  00E6               	movwf	_prec
  3236     0062  30FF               	movlw	255
  3237     0063  00E7               	movwf	_prec+1
  3238     0064                     l1309:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1383:         if 
      +                          (*fmt[0] == 's' || !strncmp(*fmt, "lls", ((sizeof("lls")/sizeof("lls"[0]))-1))) {
  3241     0064  0833               	movf	vfpfcnvrt@fmt,w
  3242     0065  0086               	movwf	6
  3243     0066  0187               	clrf	7
  3244     0067  3F40               	moviw [0]fsr1
  3245     0068  00B5               	movwf	??_vfpfcnvrt
  3246     0069  3F41               	moviw [1]fsr1
  3247     006A  00B6               	movwf	??_vfpfcnvrt+1
  3248     006B  0835               	movf	??_vfpfcnvrt,w
  3249     006C  0084               	movwf	4
  3250     006D  0836               	movf	??_vfpfcnvrt+1,w
  3251     006E  0085               	movwf	5
  3252     006F  0012               	moviw fsr0++
  3253     0070  3A73               	xorlw	115
  3254     0071  1903               	btfsc	3,2
  3255     0072  2874               	goto	u621
  3256     0073  2875               	goto	u620
  3257     0074                     u621:
  3258     0074  288D               	goto	l1313
  3259     0075                     u620:
  3260     0075                     l1311:
  3261     0075  0833               	movf	vfpfcnvrt@fmt,w
  3262     0076  0086               	movwf	6
  3263     0077  0187               	clrf	7
  3264     0078  3F40               	moviw [0]fsr1
  3265     0079  00F1               	movwf	strncmp@_l
  3266     007A  3F41               	moviw [1]fsr1
  3267     007B  00F2               	movwf	strncmp@_l+1
  3268     007C  30D5               	movlw	low (STR_2| (0+32768))
  3269     007D  00F3               	movwf	strncmp@_r
  3270     007E  3083               	movlw	high (STR_2| (0+32768))
  3271     007F  00F4               	movwf	strncmp@_r+1
  3272     0080  3003               	movlw	3
  3273     0081  00F5               	movwf	strncmp@n
  3274     0082  3000               	movlw	0
  3275     0083  00F6               	movwf	strncmp@n+1
  3276     0084  3181  21E5  3180   	fcall	_strncmp
  3277     0087  0871               	movf	?_strncmp,w
  3278     0088  0472               	iorwf	?_strncmp+1,w
  3279     0089  1D03               	btfss	3,2
  3280     008A  288C               	goto	u631
  3281     008B  288D               	goto	u630
  3282     008C                     u631:
  3283     008C  28BF               	goto	l1325
  3284     008D                     u630:
  3285     008D                     l1313:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1385:    *fmt += 
      +                          *fmt[0] == 's' ? 1 : ((sizeof("lls")/sizeof("lls"[0]))-1);
  3288     008D  0020               	movlb	0	; select bank0
  3289     008E  0833               	movf	vfpfcnvrt@fmt,w
  3290     008F  0086               	movwf	6
  3291     0090  0187               	clrf	7
  3292     0091  3F40               	moviw [0]fsr1
  3293     0092  00B5               	movwf	??_vfpfcnvrt
  3294     0093  3F41               	moviw [1]fsr1
  3295     0094  00B6               	movwf	??_vfpfcnvrt+1
  3296     0095  0835               	movf	??_vfpfcnvrt,w
  3297     0096  0084               	movwf	4
  3298     0097  0836               	movf	??_vfpfcnvrt+1,w
  3299     0098  0085               	movwf	5
  3300     0099  0012               	moviw fsr0++
  3301     009A  3A73               	xorlw	115
  3302     009B  1903               	btfsc	3,2
  3303     009C  289E               	goto	u641
  3304     009D  289F               	goto	u640
  3305     009E                     u641:
  3306     009E  28A4               	goto	l1317
  3307     009F                     u640:
  3308     009F                     l1315:
  3309     009F  3003               	movlw	3
  3310     00A0  00B9               	movwf	_vfpfcnvrt$896
  3311     00A1  3000               	movlw	0
  3312     00A2  00BA               	movwf	_vfpfcnvrt$896+1
  3313     00A3  28A8               	goto	l1319
  3314     00A4                     l1317:
  3315     00A4  3001               	movlw	1
  3316     00A5  00B9               	movwf	_vfpfcnvrt$896
  3317     00A6  3000               	movlw	0
  3318     00A7  00BA               	movwf	_vfpfcnvrt$896+1
  3319     00A8                     l1319:
  3320     00A8  0833               	movf	vfpfcnvrt@fmt,w
  3321     00A9  0086               	movwf	6
  3322     00AA  0187               	clrf	7
  3323     00AB  0839               	movf	_vfpfcnvrt$896,w
  3324     00AC  0781               	addwf	1,f
  3325     00AD  3141               	addfsr 1,1
  3326     00AE  083A               	movf	_vfpfcnvrt$896+1,w
  3327     00AF  3D81               	addwfc	1,f
  3328     00B0  317F               	addfsr 1,-1
  3329     00B1                     l1321:
  3330                           
  3331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1386:            
      +                           return (void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value
      +                           of _vfpfcnvrt is never used
  3332     00B1  0834               	movf	vfpfcnvrt@ap,w
  3333     00B2  0086               	movwf	6
  3334     00B3  0187               	clrf	7
  3335     00B4  3F40               	moviw [0]fsr1
  3336     00B5  0084               	movwf	4
  3337     00B6  0185               	clrf	5
  3338     00B7  0A81               	incf	1,f
  3339     00B8  0800               	movf	0,w
  3340     00B9  00FB               	movwf	stoa@s
  3341     00BA  083B               	movf	vfpfcnvrt@fp,w
  3342     00BB  3180  20E2  3180   	fcall	_stoa
  3343     00BE  28E1               	goto	l838
  3344     00BF                     l1325:
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3347     00BF  0020               	movlb	0	; select bank0
  3348     00C0  0833               	movf	vfpfcnvrt@fmt,w
  3349     00C1  0086               	movwf	6
  3350     00C2  0187               	clrf	7
  3351     00C3  3001               	movlw	1
  3352     00C4  0781               	addwf	1,f
  3353     00C5  3141               	addfsr 1,1
  3354     00C6  1803               	skipnc
  3355     00C7  0A81               	incf	1,f
  3356     00C8  28E1               	goto	l838
  3357     00C9                     l1329:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3360     00C9  0833               	movf	vfpfcnvrt@fmt,w
  3361     00CA  0086               	movwf	6
  3362     00CB  0187               	clrf	7
  3363     00CC  3F40               	moviw [0]fsr1
  3364     00CD  00B5               	movwf	??_vfpfcnvrt
  3365     00CE  3F41               	moviw [1]fsr1
  3366     00CF  00B6               	movwf	??_vfpfcnvrt+1
  3367     00D0  0835               	movf	??_vfpfcnvrt,w
  3368     00D1  0084               	movwf	4
  3369     00D2  0836               	movf	??_vfpfcnvrt+1,w
  3370     00D3  0085               	movwf	5
  3371     00D4  0800               	movf	0,w	;code access
  3372     00D5  00B7               	movwf	??_vfpfcnvrt+2
  3373     00D6  01B8               	clrf	??_vfpfcnvrt+3
  3374     00D7  0837               	movf	??_vfpfcnvrt+2,w
  3375     00D8  00F3               	movwf	fputc@c
  3376     00D9  0838               	movf	??_vfpfcnvrt+3,w
  3377     00DA  00F4               	movwf	fputc@c+1
  3378     00DB  083B               	movf	vfpfcnvrt@fp,w
  3379     00DC  00F5               	movwf	fputc@fp
  3380     00DD  3182  2241  3180   	fcall	_fputc
  3381     00E0  28BF               	goto	l1325
  3382     00E1                     l838:
  3383     00E1  0008               	return
  3384     00E2                     __end_of_vfpfcnvrt:
  3385                           
  3386                           	psect	text4
  3387     01E5                     __ptext4:	
  3388 ;; *************** function _strncmp *****************
  3389 ;; Defined at:
  3390 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strncmp.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  _l              2    1[COMMON] PTR const unsigned char 
  3393 ;;		 -> STR_1(4), 
  3394 ;;  _r              2    3[COMMON] PTR const unsigned char 
  3395 ;;		 -> STR_4(4), 
  3396 ;;  n               2    5[COMMON] unsigned int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  r               2   10[COMMON] PTR const unsigned char 
  3399 ;;		 -> STR_4(4), 
  3400 ;;  l               2    8[COMMON] PTR const unsigned char 
  3401 ;;		 -> STR_1(4), 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    1[COMMON] int 
  3404 ;; Registers used:
  3405 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3412 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3414 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3415 ;;Total ram usage:       11 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 4
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_vfpfcnvrt
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425     01E5                     _strncmp:	
  3426                           ;psect for function _strncmp
  3427                           
  3428     01E5                     l1261:	
  3429                           ;incstack = 0
  3430                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  3431                           
  3432     01E5  0872               	movf	strncmp@_l+1,w
  3433     01E6  00F9               	movwf	strncmp@l+1
  3434     01E7  0871               	movf	strncmp@_l,w
  3435     01E8  00F8               	movwf	strncmp@l
  3436     01E9  0874               	movf	strncmp@_r+1,w
  3437     01EA  00FB               	movwf	strncmp@r+1
  3438     01EB  0873               	movf	strncmp@_r,w
  3439     01EC  00FA               	movwf	strncmp@r
  3440     01ED                     l1263:
  3441     01ED  3001               	movlw	1
  3442     01EE  02F5               	subwf	strncmp@n,f
  3443     01EF  3000               	movlw	0
  3444     01F0  3BF6               	subwfb	strncmp@n+1,f
  3445     01F1  0A75               	incf	strncmp@n,w
  3446     01F2  1D03               	skipz
  3447     01F3  29F8               	goto	u551
  3448     01F4  0A76               	incf	strncmp@n+1,w
  3449     01F5  1D03               	btfss	3,2
  3450     01F6  29F8               	goto	u551
  3451     01F7  29F9               	goto	u550
  3452     01F8                     u551:
  3453     01F8  2A08               	goto	l1271
  3454     01F9                     u550:
  3455     01F9                     l1265:
  3456     01F9  01F1               	clrf	?_strncmp
  3457     01FA  01F2               	clrf	?_strncmp+1
  3458     01FB  2A40               	goto	l874
  3459     01FC                     l1269:
  3460     01FC  3001               	movlw	1
  3461     01FD  07F8               	addwf	strncmp@l,f
  3462     01FE  3000               	movlw	0
  3463     01FF  3DF9               	addwfc	strncmp@l+1,f
  3464     0200  3001               	movlw	1
  3465     0201  07FA               	addwf	strncmp@r,f
  3466     0202  3000               	movlw	0
  3467     0203  3DFB               	addwfc	strncmp@r+1,f
  3468     0204  3001               	movlw	1
  3469     0205  02F5               	subwf	strncmp@n,f
  3470     0206  3000               	movlw	0
  3471     0207  3BF6               	subwfb	strncmp@n+1,f
  3472     0208                     l1271:
  3473     0208  0878               	movf	strncmp@l,w
  3474     0209  0084               	movwf	4
  3475     020A  0879               	movf	strncmp@l+1,w
  3476     020B  0085               	movwf	5
  3477     020C  0012               	moviw fsr0++
  3478     020D  1903               	btfsc	3,2
  3479     020E  2A10               	goto	u561
  3480     020F  2A11               	goto	u560
  3481     0210                     u561:
  3482     0210  2A30               	goto	l1279
  3483     0211                     u560:
  3484     0211                     l1273:
  3485     0211  087A               	movf	strncmp@r,w
  3486     0212  0084               	movwf	4
  3487     0213  087B               	movf	strncmp@r+1,w
  3488     0214  0085               	movwf	5
  3489     0215  0012               	moviw fsr0++
  3490     0216  1903               	btfsc	3,2
  3491     0217  2A19               	goto	u571
  3492     0218  2A1A               	goto	u570
  3493     0219                     u571:
  3494     0219  2A30               	goto	l1279
  3495     021A                     u570:
  3496     021A                     l1275:
  3497     021A  0875               	movf	strncmp@n,w
  3498     021B  0476               	iorwf	strncmp@n+1,w
  3499     021C  1903               	btfsc	3,2
  3500     021D  2A1F               	goto	u581
  3501     021E  2A20               	goto	u580
  3502     021F                     u581:
  3503     021F  2A30               	goto	l1279
  3504     0220                     u580:
  3505     0220                     l1277:
  3506     0220  087A               	movf	strncmp@r,w
  3507     0221  0084               	movwf	4
  3508     0222  087B               	movf	strncmp@r+1,w
  3509     0223  0085               	movwf	5
  3510     0224  0800               	movf	0,w	;code access
  3511     0225  00F7               	movwf	??_strncmp
  3512     0226  0878               	movf	strncmp@l,w
  3513     0227  0084               	movwf	4
  3514     0228  0879               	movf	strncmp@l+1,w
  3515     0229  0085               	movwf	5
  3516     022A  0800               	movf	0,w	;code access
  3517     022B  0677               	xorwf	??_strncmp,w
  3518     022C  1903               	skipnz
  3519     022D  2A2F               	goto	u591
  3520     022E  2A30               	goto	u590
  3521     022F                     u591:
  3522     022F  29FC               	goto	l1269
  3523     0230                     u590:
  3524     0230                     l1279:
  3525     0230  0878               	movf	strncmp@l,w
  3526     0231  0084               	movwf	4
  3527     0232  0879               	movf	strncmp@l+1,w
  3528     0233  0085               	movwf	5
  3529     0234  0800               	movf	0,w	;code access
  3530     0235  00F7               	movwf	??_strncmp
  3531     0236  087A               	movf	strncmp@r,w
  3532     0237  0084               	movwf	4
  3533     0238  087B               	movf	strncmp@r+1,w
  3534     0239  0085               	movwf	5
  3535     023A  0800               	movf	0,w	;code access
  3536     023B  0277               	subwf	??_strncmp,w
  3537     023C  00F1               	movwf	?_strncmp
  3538     023D  01F2               	clrf	?_strncmp+1
  3539     023E  1C03               	skipc
  3540     023F  03F2               	decf	?_strncmp+1,f
  3541     0240                     l874:
  3542     0240  0008               	return
  3543     0241                     __end_of_strncmp:
  3544                           
  3545                           	psect	text5
  3546     00E2                     __ptext5:	
  3547 ;; *************** function _stoa *****************
  3548 ;; Defined at:
  3549 ;;		line 839 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  fp              1    wreg     PTR struct _IO_FILE
  3552 ;;		 -> NULL(0), 
  3553 ;;  s               1   11[COMMON] PTR unsigned char 
  3554 ;;		 -> ?_printf(2), main@array(20), 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  fp              1   13[BANK0 ] PTR struct _IO_FILE
  3557 ;;		 -> NULL(0), 
  3558 ;;  nuls            7    2[BANK0 ] unsigned char [7]
  3559 ;;  p               2   17[BANK0 ] int 
  3560 ;;  l               2   14[BANK0 ] int 
  3561 ;;  i               2   11[BANK0 ] int 
  3562 ;;  w               2    9[BANK0 ] int 
  3563 ;;  cp              1   16[BANK0 ] PTR unsigned char 
  3564 ;;		 -> stoa@nuls(7), ?_printf(2), main@array(20), 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3574 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3575 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3577 ;;      Totals:         1      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;Total ram usage:       20 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 7
  3581 ;; This function calls:
  3582 ;;		_fputc
  3583 ;;		_strlen
  3584 ;; This function is called by:
  3585 ;;		_vfpfcnvrt
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589     00E2                     _stoa:	
  3590                           ;psect for function _stoa
  3591                           
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3595                           ;stoa@fp stored from wreg
  3596     00E2  0020               	movlb	0	; select bank0
  3597     00E3  00AD               	movwf	stoa@fp
  3598     00E4                     l1227:
  3599                           
  3600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 839: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 840: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 841: 
      +                              char *cp, nuls[] = "(null)";
  3601     00E4  30DC               	movlw	low stoa@F1144
  3602     00E5  0086               	movwf	6
  3603     00E6  3000               	movlw	high stoa@F1144
  3604     00E7  0087               	movwf	7
  3605     00E8  3022               	movlw	low stoa@nuls
  3606     00E9  0084               	movwf	4
  3607     00EA  3000               	movlw	high stoa@nuls
  3608     00EB  0085               	movwf	5
  3609     00EC  3007               	movlw	7
  3610     00ED  00A0               	movwf	??_stoa
  3611     00EE                     u490:
  3612     00EE  0016               	moviw fsr1++
  3613     00EF  001A               	movwi fsr0++
  3614     00F0  0BA0               	decfsz	??_stoa,f
  3615     00F1  28EE               	goto	u490
  3616     00F2                     l1229:
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 842:     int i, l
      +                          , p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 845:     c
      +                          p = s;
  3619     00F2  087B               	movf	stoa@s,w
  3620     00F3  00B0               	movwf	stoa@cp
  3621     00F4                     l1231:
  3622                           
  3623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 846:     if (!cp)
      +                           {
  3624     00F4  0830               	movf	stoa@cp,w
  3625     00F5  1D03               	btfss	3,2
  3626     00F6  28F8               	goto	u501
  3627     00F7  28F9               	goto	u500
  3628     00F8                     u501:
  3629     00F8  28FB               	goto	l1235
  3630     00F9                     u500:
  3631     00F9                     l1233:
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 847:         cp =
      +                           nuls;
  3634     00F9  3022               	movlw	(low (stoa@nuls| 0))& (0+255)
  3635     00FA  00B0               	movwf	stoa@cp
  3636     00FB                     l1235:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 851:     l = (int
      +                          )strlen(cp);
  3639     00FB  0830               	movf	stoa@cp,w
  3640     00FC  3183  236B  3180   	fcall	_strlen
  3641     00FF  0872               	movf	?_strlen+1,w
  3642     0100  0020               	movlb	0	; select bank0
  3643     0101  00AF               	movwf	stoa@l+1
  3644     0102  0871               	movf	?_strlen,w
  3645     0103  00AE               	movwf	stoa@l
  3646     0104                     l1237:
  3647                           
  3648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 852:     p = prec
      +                          ;
  3649     0104  0867               	movf	_prec+1,w
  3650     0105  00B2               	movwf	stoa@p+1
  3651     0106  0866               	movf	_prec,w
  3652     0107  00B1               	movwf	stoa@p
  3653     0108                     l1239:
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 853:     l = (!(p
      +                           < 0) && (p < l)) ? p : l;
  3656     0108  1BB2               	btfsc	stoa@p+1,7
  3657     0109  290B               	goto	u511
  3658     010A  290C               	goto	u510
  3659     010B                     u511:
  3660     010B  2920               	goto	l818
  3661     010C                     u510:
  3662     010C                     l1241:
  3663     010C  0832               	movf	stoa@p+1,w
  3664     010D  3A80               	xorlw	128
  3665     010E  00A0               	movwf	??_stoa
  3666     010F  082F               	movf	stoa@l+1,w
  3667     0110  3A80               	xorlw	128
  3668     0111  0220               	subwf	??_stoa,w
  3669     0112  1D03               	skipz
  3670     0113  2916               	goto	u525
  3671     0114  082E               	movf	stoa@l,w
  3672     0115  0231               	subwf	stoa@p,w
  3673     0116                     u525:
  3674     0116  1C03               	skipc
  3675     0117  2919               	goto	u521
  3676     0118  291A               	goto	u520
  3677     0119                     u521:
  3678     0119  291B               	goto	l1243
  3679     011A                     u520:
  3680     011A  2920               	goto	l818
  3681     011B                     l1243:
  3682     011B  0020               	movlb	0	; select bank0
  3683     011C  0832               	movf	stoa@p+1,w
  3684     011D  00AF               	movwf	stoa@l+1
  3685     011E  0831               	movf	stoa@p,w
  3686     011F  00AE               	movwf	stoa@l
  3687     0120                     l818:
  3688                           
  3689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 854:     p = l;
  3690     0120  0020               	movlb	0	; select bank0
  3691     0121  082F               	movf	stoa@l+1,w
  3692     0122  00B2               	movwf	stoa@p+1
  3693     0123  082E               	movf	stoa@l,w
  3694     0124  00B1               	movwf	stoa@p
  3695                           
  3696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 855:     w = widt
      +                          h;
  3697     0125  0865               	movf	_width+1,w
  3698     0126  00AA               	movwf	stoa@w+1
  3699     0127  0864               	movf	_width,w
  3700     0128  00A9               	movwf	stoa@w
  3701                           
  3702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  3703     0129  2939               	goto	l1249
  3704     012A                     l1245:
  3705                           
  3706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 862:             
      +                          fputc(' ', fp);
  3707     012A  3020               	movlw	32
  3708     012B  00F3               	movwf	fputc@c
  3709     012C  3000               	movlw	0
  3710     012D  00F4               	movwf	fputc@c+1
  3711     012E  0020               	movlb	0	; select bank0
  3712     012F  082D               	movf	stoa@fp,w
  3713     0130  00F5               	movwf	fputc@fp
  3714     0131  3182  2241  3180   	fcall	_fputc
  3715     0134                     l1247:
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 863:             
      +                          ++l;
  3718     0134  3001               	movlw	1
  3719     0135  0020               	movlb	0	; select bank0
  3720     0136  07AE               	addwf	stoa@l,f
  3721     0137  3000               	movlw	0
  3722     0138  3DAF               	addwfc	stoa@l+1,f
  3723     0139                     l1249:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 861:         whil
      +                          e (l < w) {
  3726     0139  082F               	movf	stoa@l+1,w
  3727     013A  3A80               	xorlw	128
  3728     013B  00A0               	movwf	??_stoa
  3729     013C  082A               	movf	stoa@w+1,w
  3730     013D  3A80               	xorlw	128
  3731     013E  0220               	subwf	??_stoa,w
  3732     013F  1D03               	skipz
  3733     0140  2943               	goto	u535
  3734     0141  0829               	movf	stoa@w,w
  3735     0142  022E               	subwf	stoa@l,w
  3736     0143                     u535:
  3737     0143  1C03               	skipc
  3738     0144  2946               	goto	u531
  3739     0145  2947               	goto	u530
  3740     0146                     u531:
  3741     0146  292A               	goto	l1245
  3742     0147                     u530:
  3743     0147                     l1251:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 870:     i = 0;
  3746     0147  0020               	movlb	0	; select bank0
  3747     0148  01AB               	clrf	stoa@i
  3748     0149  01AC               	clrf	stoa@i+1
  3749                           
  3750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  3751     014A  2964               	goto	l1259
  3752     014B                     l1253:
  3753                           
  3754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 872:         fput
      +                          c(*cp, fp);
  3755     014B  0020               	movlb	0	; select bank0
  3756     014C  0830               	movf	stoa@cp,w
  3757     014D  0086               	movwf	6
  3758     014E  0187               	clrf	7
  3759     014F  0801               	movf	1,w
  3760     0150  00A0               	movwf	??_stoa
  3761     0151  01A1               	clrf	??_stoa+1
  3762     0152  0820               	movf	??_stoa,w
  3763     0153  00F3               	movwf	fputc@c
  3764     0154  0821               	movf	??_stoa+1,w
  3765     0155  00F4               	movwf	fputc@c+1
  3766     0156  082D               	movf	stoa@fp,w
  3767     0157  00F5               	movwf	fputc@fp
  3768     0158  3182  2241  3180   	fcall	_fputc
  3769     015B                     l1255:
  3770                           
  3771                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 873:         ++cp
      +                          ;
  3772     015B  3001               	movlw	1
  3773     015C  0020               	movlb	0	; select bank0
  3774     015D  00A0               	movwf	??_stoa
  3775     015E  0820               	movf	??_stoa,w
  3776     015F  07B0               	addwf	stoa@cp,f
  3777     0160                     l1257:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 874:         ++i;
  3780     0160  3001               	movlw	1
  3781     0161  07AB               	addwf	stoa@i,f
  3782     0162  3000               	movlw	0
  3783     0163  3DAC               	addwfc	stoa@i+1,f
  3784     0164                     l1259:
  3785                           
  3786                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 871:     while (i
      +                           < p) {
  3787     0164  082C               	movf	stoa@i+1,w
  3788     0165  3A80               	xorlw	128
  3789     0166  00A0               	movwf	??_stoa
  3790     0167  0832               	movf	stoa@p+1,w
  3791     0168  3A80               	xorlw	128
  3792     0169  0220               	subwf	??_stoa,w
  3793     016A  1D03               	skipz
  3794     016B  296E               	goto	u545
  3795     016C  0831               	movf	stoa@p,w
  3796     016D  022B               	subwf	stoa@i,w
  3797     016E                     u545:
  3798     016E  1C03               	skipc
  3799     016F  2971               	goto	u541
  3800     0170  2972               	goto	u540
  3801     0171                     u541:
  3802     0171  294B               	goto	l1253
  3803     0172                     u540:
  3804     0172                     l827:
  3805     0172  0008               	return
  3806     0173                     __end_of_stoa:
  3807                           
  3808                           	psect	text6
  3809     036B                     __ptext6:	
  3810 ;; *************** function _strlen *****************
  3811 ;; Defined at:
  3812 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strlen.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  s               1    wreg     PTR const unsigned char 
  3815 ;;		 -> stoa@nuls(7), ?_printf(2), main@array(20), 
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  s               1    5[COMMON] PTR const unsigned char 
  3818 ;;		 -> stoa@nuls(7), ?_printf(2), main@array(20), 
  3819 ;;  a               1    4[COMMON] PTR const unsigned char 
  3820 ;;		 -> stoa@nuls(7), ?_printf(2), main@array(20), 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2    1[COMMON] unsigned int 
  3823 ;; Registers used:
  3824 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;Total ram usage:        5 bytes
  3835 ;; Hardware stack levels used: 1
  3836 ;; Hardware stack levels required when called: 4
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_stoa
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     036B                     _strlen:	
  3845                           ;psect for function _strlen
  3846                           
  3847                           
  3848                           ;incstack = 0
  3849                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  3850                           ;strlen@s stored from wreg
  3851     036B  00F5               	movwf	strlen@s
  3852     036C                     l1217:
  3853     036C  0875               	movf	strlen@s,w
  3854     036D  00F4               	movwf	strlen@a
  3855     036E  2B73               	goto	l1221
  3856     036F                     l1219:
  3857     036F  3001               	movlw	1
  3858     0370  00F3               	movwf	??_strlen
  3859     0371  0873               	movf	??_strlen,w
  3860     0372  07F5               	addwf	strlen@s,f
  3861     0373                     l1221:
  3862     0373  0875               	movf	strlen@s,w
  3863     0374  0086               	movwf	6
  3864     0375  0187               	clrf	7
  3865     0376  0801               	movf	1,w
  3866     0377  1D03               	btfss	3,2
  3867     0378  2B7A               	goto	u481
  3868     0379  2B7B               	goto	u480
  3869     037A                     u481:
  3870     037A  2B6F               	goto	l1219
  3871     037B                     u480:
  3872     037B                     l1223:
  3873     037B  0874               	movf	strlen@a,w
  3874     037C  0275               	subwf	strlen@s,w
  3875     037D  00F1               	movwf	?_strlen
  3876     037E  01F2               	clrf	?_strlen+1
  3877     037F  1BF1               	btfsc	?_strlen,7
  3878     0380  03F2               	decf	?_strlen+1,f
  3879     0381                     l870:
  3880     0381  0008               	return
  3881     0382                     __end_of_strlen:
  3882                           
  3883                           	psect	text7
  3884     0241                     __ptext7:	
  3885 ;; *************** function _fputc *****************
  3886 ;; Defined at:
  3887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  c               2    3[COMMON] int 
  3890 ;;  fp              1    5[COMMON] PTR struct _IO_FILE
  3891 ;;		 -> NULL(0), 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;		None
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  2    3[COMMON] int 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3903 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3906 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3907 ;;Total ram usage:        8 bytes
  3908 ;; Hardware stack levels used: 1
  3909 ;; Hardware stack levels required when called: 6
  3910 ;; This function calls:
  3911 ;;		_putch
  3912 ;; This function is called by:
  3913 ;;		_stoa
  3914 ;;		_vfpfcnvrt
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918     0241                     _fputc:	
  3919                           ;psect for function _fputc
  3920                           
  3921     0241                     l1203:	
  3922                           ;incstack = 0
  3923                           ; Regs used in _fputc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3924                           
  3925     0241  0875               	movf	fputc@fp,w
  3926     0242  1903               	btfsc	3,2
  3927     0243  2A45               	goto	u441
  3928     0244  2A46               	goto	u440
  3929     0245                     u441:
  3930     0245  2A4B               	goto	l1207
  3931     0246                     u440:
  3932     0246                     l1205:
  3933     0246  0875               	movf	fputc@fp,w
  3934     0247  1D03               	btfss	3,2
  3935     0248  2A4A               	goto	u451
  3936     0249  2A4B               	goto	u450
  3937     024A                     u451:
  3938     024A  2A50               	goto	l1209
  3939     024B                     u450:
  3940     024B                     l1207:
  3941     024B  0873               	movf	fputc@c,w
  3942     024C  3183  23B7  3182   	fcall	_putch
  3943     024F  2A81               	goto	l856
  3944     0250                     l1209:
  3945     0250  0875               	movf	fputc@fp,w
  3946     0251  3E08               	addlw	8
  3947     0252  0086               	movwf	6
  3948     0253  0187               	clrf	7
  3949     0254  0016               	moviw fsr1++
  3950     0255  0401               	iorwf	1,w
  3951     0256  1903               	btfsc	3,2
  3952     0257  2A59               	goto	u461
  3953     0258  2A5A               	goto	u460
  3954     0259                     u461:
  3955     0259  2A78               	goto	l1213
  3956     025A                     u460:
  3957     025A                     l1211:
  3958     025A  0875               	movf	fputc@fp,w
  3959     025B  3E08               	addlw	8
  3960     025C  0086               	movwf	6
  3961     025D  0187               	clrf	7
  3962     025E  3F40               	moviw [0]fsr1
  3963     025F  00F6               	movwf	??_fputc
  3964     0260  3F41               	moviw [1]fsr1
  3965     0261  00F7               	movwf	??_fputc+1
  3966     0262  0875               	movf	fputc@fp,w
  3967     0263  3E02               	addlw	2
  3968     0264  0086               	movwf	6
  3969     0265  0187               	clrf	7
  3970     0266  3F40               	moviw [0]fsr1
  3971     0267  00F8               	movwf	??_fputc+2
  3972     0268  3F41               	moviw [1]fsr1
  3973     0269  00F9               	movwf	??_fputc+3
  3974     026A  0879               	movf	??_fputc+3,w
  3975     026B  3A80               	xorlw	128
  3976     026C  00FA               	movwf	??_fputc+4
  3977     026D  0877               	movf	??_fputc+1,w
  3978     026E  3A80               	xorlw	128
  3979     026F  027A               	subwf	??_fputc+4,w
  3980     0270  1D03               	skipz
  3981     0271  2A74               	goto	u475
  3982     0272  0876               	movf	??_fputc,w
  3983     0273  0278               	subwf	??_fputc+2,w
  3984     0274                     u475:
  3985     0274  1803               	skipnc
  3986     0275  2A77               	goto	u471
  3987     0276  2A78               	goto	u470
  3988     0277                     u471:
  3989     0277  2A81               	goto	l856
  3990     0278                     u470:
  3991     0278                     l1213:
  3992     0278  0875               	movf	fputc@fp,w
  3993     0279  3E02               	addlw	2
  3994     027A  0086               	movwf	6
  3995     027B  0187               	clrf	7
  3996     027C  3001               	movlw	1
  3997     027D  0781               	addwf	1,f
  3998     027E  3141               	addfsr 1,1
  3999     027F  1803               	skipnc
  4000     0280  0A81               	incf	1,f
  4001     0281                     l856:
  4002     0281  0008               	return
  4003     0282                     __end_of_fputc:
  4004                           
  4005                           	psect	text8
  4006     03B7                     __ptext8:	
  4007 ;; *************** function _putch *****************
  4008 ;; Defined at:
  4009 ;;		line 176 in file "mcc_generated_files/eusart.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  txData          1    wreg     unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  txData          1    2[COMMON] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;Total ram usage:        1 bytes
  4028 ;; Hardware stack levels used: 1
  4029 ;; Hardware stack levels required when called: 5
  4030 ;; This function calls:
  4031 ;;		_EUSART_Write
  4032 ;; This function is called by:
  4033 ;;		_fputc
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037     03B7                     _putch:	
  4038                           ;psect for function _putch
  4039                           
  4040                           
  4041                           ;incstack = 0
  4042                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  4043                           ;putch@txData stored from wreg
  4044     03B7  00F2               	movwf	putch@txData
  4045     03B8                     l1201:
  4046                           
  4047                           ;mcc_generated_files/eusart.c: 176: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 177: {;mcc_generated_files/eusart.c: 178:     EUSART_Write(txData);
  4048     03B8  0872               	movf	putch@txData,w
  4049     03B9  3183  2390  3183   	fcall	_EUSART_Write
  4050     03BC                     l201:
  4051     03BC  0008               	return
  4052     03BD                     __end_of_putch:
  4053                           
  4054                           	psect	text9
  4055     0390                     __ptext9:	
  4056 ;; *************** function _EUSART_Write *****************
  4057 ;; Defined at:
  4058 ;;		line 162 in file "mcc_generated_files/eusart.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  txData          1    wreg     unsigned char 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  txData          1    1[COMMON] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;Total ram usage:        1 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 4
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_main
  4083 ;;		_putch
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087     0390                     _EUSART_Write:	
  4088                           ;psect for function _EUSART_Write
  4089                           
  4090                           
  4091                           ;incstack = 0
  4092                           ; Regs used in _EUSART_Write: [wreg]
  4093                           ;EUSART_Write@txData stored from wreg
  4094     0390  00F1               	movwf	EUSART_Write@txData
  4095     0391                     l1197:
  4096     0391                     l192:	
  4097                           ;mcc_generated_files/eusart.c: 165:     {;mcc_generated_files/eusart.c: 166:     }
  4098                           
  4099                           
  4100                           ;mcc_generated_files/eusart.c: 164:     while(0 == PIR1bits.TXIF)
  4101     0391  0020               	movlb	0	; select bank0
  4102     0392  1E10               	btfss	16,4	;volatile
  4103     0393  2B95               	goto	u431
  4104     0394  2B96               	goto	u430
  4105     0395                     u431:
  4106     0395  2B91               	goto	l192
  4107     0396                     u430:
  4108     0396                     l1199:
  4109                           
  4110                           ;mcc_generated_files/eusart.c: 168:     TX1REG = txData;
  4111     0396  0871               	movf	EUSART_Write@txData,w
  4112     0397  0023               	movlb	3	; select bank3
  4113     0398  009A               	movwf	26	;volatile
  4114     0399                     l195:
  4115     0399  0008               	return
  4116     039A                     __end_of_EUSART_Write:
  4117                           
  4118                           	psect	text10
  4119     039A                     __ptext10:	
  4120 ;; *************** function _SYSTEM_Initialize *****************
  4121 ;; Defined at:
  4122 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0, pclath, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 6
  4143 ;; This function calls:
  4144 ;;		_EUSART_Initialize
  4145 ;;		_OSCILLATOR_Initialize
  4146 ;;		_PIN_MANAGER_Initialize
  4147 ;; This function is called by:
  4148 ;;		_main
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152     039A                     _SYSTEM_Initialize:	
  4153                           ;psect for function _SYSTEM_Initialize
  4154                           
  4155     039A                     l1409:	
  4156                           ;incstack = 0
  4157                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4158                           
  4159                           
  4160                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  4161     039A  3182  22BB  3183   	fcall	_PIN_MANAGER_Initialize
  4162                           
  4163                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  4164     039D  3183  23A4  3183   	fcall	_OSCILLATOR_Initialize
  4165                           
  4166                           ;mcc_generated_files/mcc.c: 54:     EUSART_Initialize();
  4167     03A0  3182  22EC  3183   	fcall	_EUSART_Initialize
  4168     03A3                     l69:
  4169     03A3  0008               	return
  4170     03A4                     __end_of_SYSTEM_Initialize:
  4171                           
  4172                           	psect	text11
  4173     02BB                     __ptext11:	
  4174 ;; *************** function _PIN_MANAGER_Initialize *****************
  4175 ;; Defined at:
  4176 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used: 1
  4196 ;; Hardware stack levels required when called: 4
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_SYSTEM_Initialize
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204     02BB                     _PIN_MANAGER_Initialize:	
  4205                           ;psect for function _PIN_MANAGER_Initialize
  4206                           
  4207     02BB                     l1335:	
  4208                           ;incstack = 0
  4209                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4210                           
  4211                           
  4212                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4213     02BB  0022               	movlb	2	; select bank2
  4214     02BC  018C               	clrf	12	;volatile
  4215                           
  4216                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  4217     02BD  018D               	clrf	13	;volatile
  4218                           
  4219                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  4220     02BE  018E               	clrf	14	;volatile
  4221     02BF                     l1337:
  4222                           
  4223                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x11;
  4224     02BF  3011               	movlw	17
  4225     02C0  0021               	movlb	1	; select bank1
  4226     02C1  008C               	movwf	12	;volatile
  4227     02C2                     l1339:
  4228                           
  4229                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  4230     02C2  3070               	movlw	112
  4231     02C3  008D               	movwf	13	;volatile
  4232     02C4                     l1341:
  4233                           
  4234                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
  4235     02C4  30DF               	movlw	223
  4236     02C5  008E               	movwf	14	;volatile
  4237     02C6                     l1343:
  4238                           
  4239                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  4240     02C6  30CF               	movlw	207
  4241     02C7  0023               	movlb	3	; select bank3
  4242     02C8  008E               	movwf	14	;volatile
  4243     02C9                     l1345:
  4244                           
  4245                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x50;
  4246     02C9  3050               	movlw	80
  4247     02CA  008D               	movwf	13	;volatile
  4248     02CB                     l1347:
  4249                           
  4250                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x11;
  4251     02CB  3011               	movlw	17
  4252     02CC  008C               	movwf	12	;volatile
  4253                           
  4254                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  4255     02CD  0024               	movlb	4	; select bank4
  4256     02CE  018D               	clrf	13	;volatile
  4257                           
  4258                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  4259     02CF  018C               	clrf	12	;volatile
  4260                           
  4261                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  4262     02D0  018E               	clrf	14	;volatile
  4263     02D1                     l1349:
  4264                           
  4265                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
  4266     02D1  0021               	movlb	1	; select bank1
  4267     02D2  1795               	bsf	21,7	;volatile
  4268                           
  4269                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  4270     02D3  0025               	movlb	5	; select bank5
  4271     02D4  018C               	clrf	12	;volatile
  4272                           
  4273                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  4274     02D5  018D               	clrf	13	;volatile
  4275                           
  4276                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  4277     02D6  018E               	clrf	14	;volatile
  4278     02D7                     l1351:
  4279                           
  4280                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
  4281     02D7  3037               	movlw	55
  4282     02D8  0026               	movlb	6	; select bank6
  4283     02D9  008C               	movwf	12	;volatile
  4284     02DA                     l1353:
  4285                           
  4286                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
  4287     02DA  30F0               	movlw	240
  4288     02DB  008D               	movwf	13	;volatile
  4289     02DC                     l1355:
  4290                           
  4291                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  4292     02DC  30FF               	movlw	255
  4293     02DD  008E               	movwf	14	;volatile
  4294     02DE                     l1357:
  4295                           
  4296                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
  4297     02DE  303F               	movlw	63
  4298     02DF  0027               	movlb	7	; select bank7
  4299     02E0  008C               	movwf	12	;volatile
  4300     02E1                     l1359:
  4301                           
  4302                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
  4303     02E1  30F0               	movlw	240
  4304     02E2  008D               	movwf	13	;volatile
  4305     02E3                     l1361:
  4306                           
  4307                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
  4308     02E3  30FF               	movlw	255
  4309     02E4  008E               	movwf	14	;volatile
  4310     02E5                     l1363:
  4311                           
  4312                           ;mcc_generated_files/pin_manager.c: 114:     RXPPS = 0x0D;
  4313     02E5  300D               	movlw	13
  4314     02E6  003C               	movlb	28	; select bank28
  4315     02E7  00A4               	movwf	36	;volatile
  4316     02E8                     l1365:
  4317                           
  4318                           ;mcc_generated_files/pin_manager.c: 115:     RB7PPS = 0x12;
  4319     02E8  3012               	movlw	18
  4320     02E9  003D               	movlb	29	; select bank29
  4321     02EA  009F               	movwf	31	;volatile
  4322     02EB                     l51:
  4323     02EB  0008               	return
  4324     02EC                     __end_of_PIN_MANAGER_Initialize:
  4325                           
  4326                           	psect	text12
  4327     03A4                     __ptext12:	
  4328 ;; *************** function _OSCILLATOR_Initialize *****************
  4329 ;; Defined at:
  4330 ;;		line 57 in file "mcc_generated_files/mcc.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;		None
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1    wreg      void 
  4337 ;; Registers used:
  4338 ;;		wreg, status,2
  4339 ;; Tracked objects:
  4340 ;;		On entry : 0/0
  4341 ;;		On exit  : 0/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used: 1
  4350 ;; Hardware stack levels required when called: 4
  4351 ;; This function calls:
  4352 ;;		Nothing
  4353 ;; This function is called by:
  4354 ;;		_SYSTEM_Initialize
  4355 ;; This function uses a non-reentrant model
  4356 ;;
  4357                           
  4358     03A4                     _OSCILLATOR_Initialize:	
  4359                           ;psect for function _OSCILLATOR_Initialize
  4360                           
  4361     03A4                     l1367:	
  4362                           ;incstack = 0
  4363                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4364                           
  4365                           
  4366                           ;mcc_generated_files/mcc.c: 60:     OSCCON = 0x68;
  4367     03A4  3068               	movlw	104
  4368     03A5  0021               	movlb	1	; select bank1
  4369     03A6  0099               	movwf	25	;volatile
  4370     03A7                     l1369:
  4371                           
  4372                           ;mcc_generated_files/mcc.c: 62:     OSCTUNE = 0x00;
  4373     03A7  0198               	clrf	24	;volatile
  4374     03A8                     l1371:
  4375                           
  4376                           ;mcc_generated_files/mcc.c: 64:     BORCON = 0x00;
  4377     03A8  0022               	movlb	2	; select bank2
  4378     03A9  0196               	clrf	22	;volatile
  4379     03AA                     l72:
  4380     03AA  0008               	return
  4381     03AB                     __end_of_OSCILLATOR_Initialize:
  4382                           
  4383                           	psect	text13
  4384     02EC                     __ptext13:	
  4385 ;; *************** function _EUSART_Initialize *****************
  4386 ;; Defined at:
  4387 ;;		line 83 in file "mcc_generated_files/eusart.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;Total ram usage:        0 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 5
  4408 ;; This function calls:
  4409 ;;		_EUSART_SetErrorHandler
  4410 ;;		_EUSART_SetFramingErrorHandler
  4411 ;;		_EUSART_SetOverrunErrorHandler
  4412 ;;		_EUSART_SetRxInterruptHandler
  4413 ;; This function is called by:
  4414 ;;		_SYSTEM_Initialize
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418     02EC                     _EUSART_Initialize:	
  4419                           ;psect for function _EUSART_Initialize
  4420                           
  4421     02EC                     l1373:	
  4422                           ;incstack = 0
  4423                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4424                           
  4425                           
  4426                           ;mcc_generated_files/eusart.c: 86:     PIE1bits.RCIE = 0;
  4427     02EC  0021               	movlb	1	; select bank1
  4428     02ED  1290               	bcf	16,5	;volatile
  4429     02EE                     l1375:
  4430                           
  4431                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4432     02EE  3082               	movlw	low _EUSART_Receive_ISR
  4433     02EF  00F1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4434     02F0  3002               	movlw	high _EUSART_Receive_ISR
  4435     02F1  00F2               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4436     02F2  3183  23BD  3182   	fcall	_EUSART_SetRxInterruptHandler
  4437     02F5                     l1377:
  4438                           
  4439                           ;mcc_generated_files/eusart.c: 91:     BAUD1CON = 0x08;
  4440     02F5  3008               	movlw	8
  4441     02F6  0023               	movlb	3	; select bank3
  4442     02F7  009F               	movwf	31	;volatile
  4443     02F8                     l1379:
  4444                           
  4445                           ;mcc_generated_files/eusart.c: 94:     RC1STA = 0x90;
  4446     02F8  3090               	movlw	144
  4447     02F9  009D               	movwf	29	;volatile
  4448     02FA                     l1381:
  4449                           
  4450                           ;mcc_generated_files/eusart.c: 97:     TX1STA = 0x24;
  4451     02FA  3024               	movlw	36
  4452     02FB  009E               	movwf	30	;volatile
  4453     02FC                     l1383:
  4454                           
  4455                           ;mcc_generated_files/eusart.c: 100:     SPBRGL = 0x67;
  4456     02FC  3067               	movlw	103
  4457     02FD  009B               	movwf	27	;volatile
  4458     02FE                     l1385:
  4459                           
  4460                           ;mcc_generated_files/eusart.c: 103:     SPBRGH = 0x00;
  4461     02FE  019C               	clrf	28	;volatile
  4462     02FF                     l1387:
  4463                           
  4464                           ;mcc_generated_files/eusart.c: 106:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4465     02FF  30E5               	movlw	low _EUSART_DefaultFramingErrorHandler
  4466     0300  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4467     0301  3003               	movlw	high _EUSART_DefaultFramingErrorHandler
  4468     0302  00F2               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4469     0303  3183  23C9  3182   	fcall	_EUSART_SetFramingErrorHandler
  4470     0306                     l1389:
  4471                           
  4472                           ;mcc_generated_files/eusart.c: 107:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4473     0306  30DD               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4474     0307  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4475     0308  3003               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4476     0309  00F2               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4477     030A  3183  23C3  3182   	fcall	_EUSART_SetOverrunErrorHandler
  4478     030D                     l1391:
  4479                           
  4480                           ;mcc_generated_files/eusart.c: 108:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4481     030D  30E1               	movlw	low _EUSART_DefaultErrorHandler
  4482     030E  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler
  4483     030F  3003               	movlw	high _EUSART_DefaultErrorHandler
  4484     0310  00F2               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4485     0311  3183  23CF  3182   	fcall	_EUSART_SetErrorHandler
  4486                           
  4487                           ;mcc_generated_files/eusart.c: 110:     eusartRxLastError.status = 0;
  4488     0314  0020               	movlb	0	; select bank0
  4489     0315  01E9               	clrf	_eusartRxLastError	;volatile
  4490                           
  4491                           ;mcc_generated_files/eusart.c: 113:     eusartRxHead = 0;
  4492     0316  01FC               	clrf	_eusartRxHead	;volatile
  4493                           
  4494                           ;mcc_generated_files/eusart.c: 114:     eusartRxTail = 0;
  4495     0317  01EB               	clrf	_eusartRxTail	;volatile
  4496                           
  4497                           ;mcc_generated_files/eusart.c: 115:     eusartRxCount = 0;
  4498     0318  01EA               	clrf	_eusartRxCount	;volatile
  4499     0319                     l1393:
  4500                           
  4501                           ;mcc_generated_files/eusart.c: 118:     PIE1bits.RCIE = 1;
  4502     0319  0021               	movlb	1	; select bank1
  4503     031A  1690               	bsf	16,5	;volatile
  4504     031B                     l168:
  4505     031B  0008               	return
  4506     031C                     __end_of_EUSART_Initialize:
  4507                           
  4508                           	psect	text14
  4509     03BD                     __ptext14:	
  4510 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4511 ;; Defined at:
  4512 ;;		line 243 in file "mcc_generated_files/eusart.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4515 ;;		 -> EUSART_Receive_ISR(1), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4531 ;;Total ram usage:        2 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 4
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_EUSART_Initialize
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541     03BD                     _EUSART_SetRxInterruptHandler:	
  4542                           ;psect for function _EUSART_SetRxInterruptHandler
  4543                           
  4544     03BD                     l1283:	
  4545                           ;incstack = 0
  4546                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4547                           
  4548                           
  4549                           ;mcc_generated_files/eusart.c: 244:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4550     03BD  0872               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4551     03BE  0020               	movlb	0	; select bank0
  4552     03BF  00EF               	movwf	_EUSART_RxDefaultInterruptHandler+1
  4553     03C0  0871               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4554     03C1  00EE               	movwf	_EUSART_RxDefaultInterruptHandler
  4555     03C2                     l233:
  4556     03C2  0008               	return
  4557     03C3                     __end_of_EUSART_SetRxInterruptHandler:
  4558                           
  4559                           	psect	text15
  4560     03C3                     __ptext15:	
  4561 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4562 ;; Defined at:
  4563 ;;		line 234 in file "mcc_generated_files/eusart.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4566 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;                  1    wreg      void 
  4571 ;; Registers used:
  4572 ;;		wreg
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4582 ;;Total ram usage:        2 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; Hardware stack levels required when called: 4
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_EUSART_Initialize
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592     03C3                     _EUSART_SetOverrunErrorHandler:	
  4593                           ;psect for function _EUSART_SetOverrunErrorHandler
  4594                           
  4595     03C3                     l1287:	
  4596                           ;incstack = 0
  4597                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4598                           
  4599                           
  4600                           ;mcc_generated_files/eusart.c: 235:     EUSART_OverrunErrorHandler = interruptHandler;
  4601     03C3  0872               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4602     03C4  0021               	movlb	1	; select bank1
  4603     03C5  00E6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4604     03C6  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4605     03C7  00E5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4606     03C8                     l227:
  4607     03C8  0008               	return
  4608     03C9                     __end_of_EUSART_SetOverrunErrorHandler:
  4609                           
  4610                           	psect	text16
  4611     03C9                     __ptext16:	
  4612 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4613 ;; Defined at:
  4614 ;;		line 230 in file "mcc_generated_files/eusart.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4617 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;Total ram usage:        2 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 4
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_EUSART_Initialize
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643     03C9                     _EUSART_SetFramingErrorHandler:	
  4644                           ;psect for function _EUSART_SetFramingErrorHandler
  4645                           
  4646     03C9                     l1285:	
  4647                           ;incstack = 0
  4648                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4649                           
  4650                           
  4651                           ;mcc_generated_files/eusart.c: 231:     EUSART_FramingErrorHandler = interruptHandler;
  4652     03C9  0872               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4653     03CA  0020               	movlb	0	; select bank0
  4654     03CB  00ED               	movwf	_EUSART_FramingErrorHandler+1
  4655     03CC  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4656     03CD  00EC               	movwf	_EUSART_FramingErrorHandler
  4657     03CE                     l224:
  4658     03CE  0008               	return
  4659     03CF                     __end_of_EUSART_SetFramingErrorHandler:
  4660                           
  4661                           	psect	text17
  4662     03CF                     __ptext17:	
  4663 ;; *************** function _EUSART_SetErrorHandler *****************
  4664 ;; Defined at:
  4665 ;;		line 238 in file "mcc_generated_files/eusart.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4668 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  1    wreg      void 
  4673 ;; Registers used:
  4674 ;;		wreg
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;Total ram usage:        2 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; Hardware stack levels required when called: 4
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_EUSART_Initialize
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694     03CF                     _EUSART_SetErrorHandler:	
  4695                           ;psect for function _EUSART_SetErrorHandler
  4696                           
  4697     03CF                     l1289:	
  4698                           ;incstack = 0
  4699                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4700                           
  4701                           
  4702                           ;mcc_generated_files/eusart.c: 239:     EUSART_ErrorHandler = interruptHandler;
  4703     03CF  0872               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4704     03D0  0021               	movlb	1	; select bank1
  4705     03D1  00E4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4706     03D2  0871               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4707     03D3  00E3               	movwf	_EUSART_ErrorHandler^(0+128)
  4708     03D4                     l230:
  4709     03D4  0008               	return
  4710     03D5                     __end_of_EUSART_SetErrorHandler:
  4711                           
  4712                           	psect	intentry
  4713     0004                     __pintentry:	
  4714 ;; *************** function _INTERRUPT_InterruptManager *****************
  4715 ;; Defined at:
  4716 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 3
  4737 ;; This function calls:
  4738 ;;		Absolute function
  4739 ;;		_EUSART_Receive_ISR
  4740 ;; This function is called by:
  4741 ;;		Interrupt level 1
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745     0004                     _INTERRUPT_InterruptManager:
  4746                           
  4747                           ;incstack = 0
  4748     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4749                           
  4750                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4751     0005  3180               	pagesel	$
  4752     0006                     i1l1489:
  4753                           
  4754                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4755     0006  1F0B               	btfss	11,6	;volatile
  4756     0007  2809               	goto	u80_21
  4757     0008  280A               	goto	u80_20
  4758     0009                     u80_21:
  4759     0009  2819               	goto	i1l250
  4760     000A                     u80_20:
  4761     000A                     i1l1491:
  4762                           
  4763                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1)
  4764     000A  0021               	movlb	1	; select bank1
  4765     000B  1E90               	btfss	16,5	;volatile
  4766     000C  280E               	goto	u81_21
  4767     000D  280F               	goto	u81_20
  4768     000E                     u81_21:
  4769     000E  2819               	goto	i1l250
  4770     000F                     u81_20:
  4771     000F                     i1l1493:
  4772     000F  0020               	movlb	0	; select bank0
  4773     0010  1E90               	btfss	16,5	;volatile
  4774     0011  2813               	goto	u82_21
  4775     0012  2814               	goto	u82_20
  4776     0013                     u82_21:
  4777     0013  2819               	goto	i1l250
  4778     0014                     u82_20:
  4779     0014                     i1l1495:
  4780                           
  4781                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_RxDefaultInterruptHandler();
  4782     0014  086F               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  4783     0015  008A               	movwf	10
  4784     0016  086E               	movf	_EUSART_RxDefaultInterruptHandler,w
  4785     0017  000A               	callw
  4786     0018  3180               	pagesel	$
  4787     0019                     i1l250:	
  4788                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4789                           
  4790     0019  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4791     001A  0009               	retfie
  4792     001B                     __end_of_INTERRUPT_InterruptManager:
  4793                           
  4794                           	psect	text19
  4795     0282                     __ptext19:	
  4796 ;; *************** function _EUSART_Receive_ISR *****************
  4797 ;; Defined at:
  4798 ;;		line 182 in file "mcc_generated_files/eusart.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 2
  4819 ;; This function calls:
  4820 ;;		Absolute function
  4821 ;;		_EUSART_DefaultErrorHandler
  4822 ;;		_EUSART_DefaultFramingErrorHandler
  4823 ;;		_EUSART_DefaultOverrunErrorHandler
  4824 ;;		_EUSART_RxDataHandler
  4825 ;; This function is called by:
  4826 ;;		_EUSART_Initialize
  4827 ;;		_INTERRUPT_InterruptManager
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831     0282                     _EUSART_Receive_ISR:	
  4832                           ;psect for function _EUSART_Receive_ISR
  4833                           
  4834     0282                     i1l1439:	
  4835                           ;incstack = 0
  4836                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4837                           
  4838                           
  4839                           ;mcc_generated_files/eusart.c: 185:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4840     0282  087C               	movf	_eusartRxHead,w	;volatile
  4841     0283  3E5C               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4842     0284  0086               	movwf	6
  4843     0285  0187               	clrf	7
  4844     0286  0181               	clrf	1
  4845     0287                     i1l1441:
  4846                           
  4847                           ;mcc_generated_files/eusart.c: 187:     if(RC1STAbits.FERR){
  4848     0287  0023               	movlb	3	; select bank3
  4849     0288  1D1D               	btfss	29,2	;volatile
  4850     0289  2A8B               	goto	u68_21
  4851     028A  2A8C               	goto	u68_20
  4852     028B                     u68_21:
  4853     028B  2A97               	goto	i1l1447
  4854     028C                     u68_20:
  4855     028C                     i1l1443:
  4856                           
  4857                           ;mcc_generated_files/eusart.c: 188:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4858     028C  087C               	movf	_eusartRxHead,w	;volatile
  4859     028D  3E5C               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4860     028E  0086               	movwf	6
  4861     028F  0187               	clrf	7
  4862     0290  1481               	bsf	1,1
  4863     0291                     i1l1445:
  4864                           
  4865                           ;mcc_generated_files/eusart.c: 189:         EUSART_FramingErrorHandler();
  4866     0291  0020               	movlb	0	; select bank0
  4867     0292  086D               	movf	_EUSART_FramingErrorHandler+1,w
  4868     0293  008A               	movwf	10
  4869     0294  086C               	movf	_EUSART_FramingErrorHandler,w
  4870     0295  000A               	callw
  4871     0296  3182               	pagesel	$
  4872     0297                     i1l1447:
  4873                           
  4874                           ;mcc_generated_files/eusart.c: 192:     if(RC1STAbits.OERR){
  4875     0297  0023               	movlb	3	; select bank3
  4876     0298  1C9D               	btfss	29,1	;volatile
  4877     0299  2A9B               	goto	u69_21
  4878     029A  2A9C               	goto	u69_20
  4879     029B                     u69_21:
  4880     029B  2AA7               	goto	i1l1453
  4881     029C                     u69_20:
  4882     029C                     i1l1449:
  4883                           
  4884                           ;mcc_generated_files/eusart.c: 193:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4885     029C  087C               	movf	_eusartRxHead,w	;volatile
  4886     029D  3E5C               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4887     029E  0086               	movwf	6
  4888     029F  0187               	clrf	7
  4889     02A0  1501               	bsf	1,2
  4890     02A1                     i1l1451:
  4891                           
  4892                           ;mcc_generated_files/eusart.c: 194:         EUSART_OverrunErrorHandler();
  4893     02A1  0021               	movlb	1	; select bank1
  4894     02A2  0866               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  4895     02A3  008A               	movwf	10
  4896     02A4  0865               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  4897     02A5  000A               	callw
  4898     02A6  3182               	pagesel	$
  4899     02A7                     i1l1453:
  4900                           
  4901                           ;mcc_generated_files/eusart.c: 197:     if(eusartRxStatusBuffer[eusartRxHead].status){
  4902     02A7  087C               	movf	_eusartRxHead,w	;volatile
  4903     02A8  3E5C               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4904     02A9  0086               	movwf	6
  4905     02AA  0187               	clrf	7
  4906     02AB  0801               	movf	1,w
  4907     02AC  1903               	btfsc	3,2
  4908     02AD  2AAF               	goto	u70_21
  4909     02AE  2AB0               	goto	u70_20
  4910     02AF                     u70_21:
  4911     02AF  2AB7               	goto	i1l1457
  4912     02B0                     u70_20:
  4913     02B0                     i1l1455:
  4914                           
  4915                           ;mcc_generated_files/eusart.c: 198:         EUSART_ErrorHandler();
  4916     02B0  0021               	movlb	1	; select bank1
  4917     02B1  0864               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  4918     02B2  008A               	movwf	10
  4919     02B3  0863               	movf	_EUSART_ErrorHandler^(0+128),w
  4920     02B4  000A               	callw
  4921     02B5  3182               	pagesel	$
  4922                           
  4923                           ;mcc_generated_files/eusart.c: 199:     } else {
  4924     02B6  2ABA               	goto	i1l208
  4925     02B7                     i1l1457:
  4926                           
  4927                           ;mcc_generated_files/eusart.c: 200:         EUSART_RxDataHandler();
  4928     02B7  3183  2353  3182   	fcall	_EUSART_RxDataHandler
  4929     02BA                     i1l208:
  4930     02BA  0008               	return
  4931     02BB                     __end_of_EUSART_Receive_ISR:
  4932                           
  4933                           	psect	text20
  4934     03DD                     __ptext20:	
  4935 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4936 ;; Defined at:
  4937 ;;		line 218 in file "mcc_generated_files/eusart.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;		None
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		None
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;Total ram usage:        0 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_EUSART_Initialize
  4961 ;;		_EUSART_Receive_ISR
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965     03DD                     _EUSART_DefaultOverrunErrorHandler:	
  4966                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4967                           
  4968     03DD                     i1l1395:	
  4969                           ;incstack = 0
  4970                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4971                           
  4972                           
  4973                           ;mcc_generated_files/eusart.c: 221:     RC1STAbits.CREN = 0;
  4974     03DD  0023               	movlb	3	; select bank3
  4975     03DE  121D               	bcf	29,4	;volatile
  4976                           
  4977                           ;mcc_generated_files/eusart.c: 222:     RC1STAbits.CREN = 1;
  4978     03DF  161D               	bsf	29,4	;volatile
  4979     03E0                     i1l218:
  4980     03E0  0008               	return
  4981     03E1                     __end_of_EUSART_DefaultOverrunErrorHandler:
  4982                           
  4983                           	psect	text21
  4984     03E5                     __ptext21:	
  4985 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4986 ;; Defined at:
  4987 ;;		line 216 in file "mcc_generated_files/eusart.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		None
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_EUSART_Initialize
  5011 ;;		_EUSART_Receive_ISR
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015     03E5                     _EUSART_DefaultFramingErrorHandler:	
  5016                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5017                           
  5018     03E5                     i1l215:	
  5019                           ;incstack = 0
  5020                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5021                           
  5022     03E5  0008               	return
  5023     03E6                     __end_of_EUSART_DefaultFramingErrorHandler:
  5024                           
  5025                           	psect	text22
  5026     03E1                     __ptext22:	
  5027 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5028 ;; Defined at:
  5029 ;;		line 226 in file "mcc_generated_files/eusart.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 1
  5050 ;; This function calls:
  5051 ;;		_EUSART_RxDataHandler
  5052 ;; This function is called by:
  5053 ;;		_EUSART_Initialize
  5054 ;;		_EUSART_Receive_ISR
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058     03E1                     _EUSART_DefaultErrorHandler:	
  5059                           ;psect for function _EUSART_DefaultErrorHandler
  5060                           
  5061     03E1                     i1l1397:	
  5062                           ;incstack = 0
  5063                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5064                           
  5065                           
  5066                           ;mcc_generated_files/eusart.c: 227:     EUSART_RxDataHandler();
  5067     03E1  3183  2353  3183   	fcall	_EUSART_RxDataHandler
  5068     03E4                     i1l221:
  5069     03E4  0008               	return
  5070     03E5                     __end_of_EUSART_DefaultErrorHandler:
  5071                           
  5072                           	psect	text23
  5073     0353                     __ptext23:	
  5074 ;; *************** function _EUSART_RxDataHandler *****************
  5075 ;; Defined at:
  5076 ;;		line 206 in file "mcc_generated_files/eusart.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5094 ;;Total ram usage:        1 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_EUSART_Receive_ISR
  5100 ;;		_EUSART_DefaultErrorHandler
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104     0353                     _EUSART_RxDataHandler:	
  5105                           ;psect for function _EUSART_RxDataHandler
  5106                           
  5107     0353                     i1l1291:	
  5108                           ;incstack = 0
  5109                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5110                           
  5111                           
  5112                           ;mcc_generated_files/eusart.c: 208:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  5113     0353  087C               	movf	_eusartRxHead,w
  5114     0354  3EC0               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5115     0355  0086               	movwf	6
  5116     0356  0187               	clrf	7
  5117     0357  0023               	movlb	3	; select bank3
  5118     0358  0819               	movf	25,w	;volatile
  5119     0359  0081               	movwf	1
  5120     035A                     i1l1293:
  5121     035A  3001               	movlw	1
  5122     035B  00F0               	movwf	??_EUSART_RxDataHandler
  5123     035C  0870               	movf	??_EUSART_RxDataHandler,w
  5124     035D  07FC               	addwf	_eusartRxHead,f	;volatile
  5125     035E                     i1l1295:
  5126                           
  5127                           ;mcc_generated_files/eusart.c: 209:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5128     035E  3008               	movlw	8
  5129     035F  027C               	subwf	_eusartRxHead,w	;volatile
  5130     0360  1C03               	skipc
  5131     0361  2B63               	goto	u60_21
  5132     0362  2B64               	goto	u60_20
  5133     0363                     u60_21:
  5134     0363  2B65               	goto	i1l1299
  5135     0364                     u60_20:
  5136     0364                     i1l1297:
  5137                           
  5138                           ;mcc_generated_files/eusart.c: 210:     {;mcc_generated_files/eusart.c: 211:         eus
      +                          artRxHead = 0;
  5139     0364  01FC               	clrf	_eusartRxHead	;volatile
  5140     0365                     i1l1299:
  5141                           
  5142                           ;mcc_generated_files/eusart.c: 213:     eusartRxCount++;
  5143     0365  3001               	movlw	1
  5144     0366  00F0               	movwf	??_EUSART_RxDataHandler
  5145     0367  0870               	movf	??_EUSART_RxDataHandler,w
  5146     0368  0020               	movlb	0	; select bank0
  5147     0369  07EA               	addwf	_eusartRxCount,f	;volatile
  5148     036A                     i1l212:
  5149     036A  0008               	return
  5150     036B                     __end_of_EUSART_RxDataHandler:
  5151     007E                     btemp	set	126	;btemp
  5152     007E                     int$flags	set	126
  5153     007E                     wtemp0	set	126
  5154                           
  5155                           	psect	idloc
  5156                           
  5157                           ;Config register IDLOC0 @ 0x8000
  5158                           ;	unspecified, using default values
  5159     8000                     	org	32768
  5160     8000  3FFF               	dw	16383
  5161                           
  5162                           ;Config register IDLOC1 @ 0x8001
  5163                           ;	unspecified, using default values
  5164     8001                     	org	32769
  5165     8001  3FFF               	dw	16383
  5166                           
  5167                           ;Config register IDLOC2 @ 0x8002
  5168                           ;	unspecified, using default values
  5169     8002                     	org	32770
  5170     8002  3FFF               	dw	16383
  5171                           
  5172                           ;Config register IDLOC3 @ 0x8003
  5173                           ;	unspecified, using default values
  5174     8003                     	org	32771
  5175     8003  3FFF               	dw	16383
  5176                           
  5177                           	psect	config
  5178                           
  5179                           ;Config register CONFIG1 @ 0x8007
  5180                           ;	Oscillator Selection Bits
  5181                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5182                           ;	Power-up Timer Enable
  5183                           ;	PWRTE = OFF, PWRT disabled
  5184                           ;	MCLR Pin Function Select
  5185                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5186                           ;	Flash Program Memory Code Protection
  5187                           ;	CP = OFF, Program memory code protection is disabled
  5188                           ;	Brown-out Reset Enable
  5189                           ;	BOREN = ON, Brown-out Reset enabled
  5190                           ;	Clock Out Enable
  5191                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5192                           ;	Internal/External Switch Over
  5193                           ;	IESO = ON, Internal External Switch Over mode is enabled
  5194                           ;	Fail-Safe Clock Monitor Enable
  5195                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5196     8007                     	org	32775
  5197     8007  3FFC               	dw	16380
  5198                           
  5199                           ;Config register CONFIG2 @ 0x8008
  5200                           ;	Flash Memory Self-Write Protection
  5201                           ;	WRT = OFF, Write protection off
  5202                           ;	Peripheral Pin Select one-way control
  5203                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  5204                           ;	Zero Cross Detect Disable Bit
  5205                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  5206                           ;	PLL Enable Bit
  5207                           ;	PLLEN = OFF, 4x PLL is enabled when software sets the SPLLEN bit
  5208                           ;	Stack Overflow/Underflow Reset Enable
  5209                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5210                           ;	Brown-out Reset Voltage Selection
  5211                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5212                           ;	Low-Power Brown Out Reset
  5213                           ;	LPBOR = OFF, Low-Power BOR is disabled
  5214                           ;	Low-Voltage Programming Enable
  5215                           ;	LVP = ON, Low-voltage programming enabled
  5216     8008                     	org	32776
  5217     8008  3EFF               	dw	16127
  5218                           
  5219                           ;Config register CONFIG3 @ 0x8009
  5220                           ;	WDT Period Select
  5221                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
  5222                           ;	Watchdog Timer Enable
  5223                           ;	WDTE = OFF, WDT disabled
  5224                           ;	WDT Window Select
  5225                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
  5226                           ;	WDT Input Clock Selector
  5227                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
  5228     8009                     	org	32777
  5229     8009  3F9F               	dw	16287

Data Sizes:
    Strings     8
    Constant    0
    Data        27
    BSS         57
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     60      80
    BANK1            80      0      71
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK0[2]), main@array(BANK0[20]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 20
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK0[2]), main@array(BANK0[20]), 

    S803$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(1) Largest target is 0

    S803$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S843$vp	PTR void  size(1) Largest target is 0

    convarg.vp	PTR void  size(1) Largest target is 0

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 20
		 -> ?_printf(BANK0[2]), main@array(BANK0[20]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 20
		 -> stoa@nuls(BANK0[7]), ?_printf(BANK0[2]), main@array(BANK0[20]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _stoa->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_stoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    4439
                                             39 BANK0     21    21      0
                       _EUSART_Write
                  _SYSTEM_Initialize
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     3      3    3985
                                             35 BANK0      4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             7     4      3    3814
                                             28 BANK0      7     4      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    22      2    3382
                                             19 BANK0      9     7      2
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (4) _stoa                                                20    19      1    1527
                                             11 COMMON     1     0      1
                                              0 BANK0     19    19      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               5     3      2     123
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     912
                                              3 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      44
                                              2 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     392
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     392
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (10) _EUSART_RxDataHandler                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _EUSART_Write
         _stoa
           _fputc
           _strlen
         _strncmp

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      A4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      A4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Jan 24 16:27:24 2023

                ?_EUSART_SetRxInterruptHandler 0071                                             l51 02EB  
                                           l72 03AA                                             l69 03A3  
                                          l201 03BC                                            l230 03D4  
                                          l224 03CE                                            l233 03C2  
                                          l227 03C8                                            l168 031B  
                                          l192 0391                                            l195 0399  
                                          l818 0120                                            l827 0172  
                                          l844 0337                                            l781 038F  
                                          l870 0381                                            l838 00E1  
                                          l856 0281                                            l874 0240  
                                          u500 00F9                                            u501 00F8  
                                          u430 0396                                            u510 010C  
                                          u431 0395                                            u511 010B  
                                          u440 0246                                            u520 011A  
                                          u441 0245                                            u521 0119  
                                          u450 024B                                            u530 0147  
                                          u610 0051                                            u451 024A  
                                          u531 0146                                            u611 0050  
                                          u460 025A                                            u540 0172  
                                          u620 0075                                            u461 0259  
                                          u541 0171                                            u525 0116  
                                          u621 0074                                            u470 0278  
                                          u550 01F9                                            u630 008D  
                                          u471 0277                                            u535 0143  
                                          u551 01F8                                            u631 008C  
                                          u480 037B                                            u560 0211  
                                          u640 009F                                            u481 037A  
                                          u545 016E                                            u561 0210  
                                          u641 009E                                            u490 00EE  
                                          u570 021A                                            u475 0274  
                                          u571 0219                                            u580 0220  
                                          u900 01C8                                            u581 021F  
                                          u901 01C5                                            u590 0230  
                                          u830 0335                                            u591 022F  
                                          u831 0334                                            u920 01D5  
                                          u840 0189                                            u841 0186  
                                          u914 01CA                                            u860 019E  
                                          u861 019B                                            u854 018B  
                                          u880 01B3                                            u881 01B0  
                                          u937 017A                                            u874 01A0  
                                          u947 018F                                            u957 01A4  
                                          u894 01B5                                            u967 01B9  
                       ??_EUSART_RxDataHandler 0070                 ?_EUSART_SetFramingErrorHandler 0071  
                                          wreg 0009                                           l1201 03B8  
                                         l1211 025A                                           l1203 0241  
                                         l1213 0278                                           l1205 0246  
                                         l1221 0373                                           l1301 0040  
                                         l1207 024B                                           l1223 037B  
                                         l1231 00F4                                           l1311 0075  
                                         l1303 0051                                           l1209 0250  
                                         l1217 036C                                           l1241 010C  
                                         l1233 00F9                                           l1321 00B1  
                                         l1313 008D                                           l1305 0059  
                                         l1219 036F                                           l1251 0147  
                                         l1243 011B                                           l1235 00FB  
                                         l1227 00E4                                           l1315 009F  
                                         l1307 0060                                           l1341 02C4  
                                         l1253 014B                                           l1245 012A  
                                         l1237 0104                                           l1229 00F2  
                                         l1261 01E5                                           l1317 00A4  
                                         l1325 00BF                                           l1309 0064  
                                         l1501 032B                                           l1351 02D7  
                                         l1343 02C6                                           l1335 02BB  
                                         l1255 015B                                           l1247 0134  
                                         l1239 0108                                           l1271 0208  
                                         l1263 01ED                                           l1319 00A8  
                                         l1503 0335                                           l1361 02E3  
                                         l1353 02DA                                           l1345 02C9  
                                         l1337 02BF                                           l1409 039A  
                                         l1257 0160                                           l1249 0139  
                                         l1273 0211                                           l1265 01F9  
                                         l1329 00C9                                           l1521 0194  
                                         l1513 0173                                           l1283 03BD  
                                         l1371 03A8                                           l1363 02E5  
                                         l1355 02DC                                           l1347 02CB  
                                         l1339 02C2                                           l1259 0164  
                                         l1275 021A                                           l1507 0382  
                                         l1523 01A0                                           l1515 0176  
                                         l1285 03C9                                           l1381 02FA  
                                         l1373 02EC                                           l1365 02E8  
                                         l1357 02DE                                           l1349 02D1  
                                         l1197 0391                                           l1277 0220  
                                         l1269 01FC                                           l1509 0385  
                                         l1525 01A9                                           l1517 017F  
                                         l1287 03C3                                           l1391 030D  
                                         l1383 02FC                                           l1375 02EE  
                                         l1367 03A4                                           l1359 02E1  
                                         l1199 0396                                           l1279 0230  
                                         l1535 01CA                                           l1527 01B5  
                                         l1519 018B                                           l1289 03CF  
                                         l1393 0319                                           l1385 02FE  
                                         l1377 02F5                                           l1369 03A7  
                                         l1537 01D9                                           l1529 01BE  
                                         l1387 02FF                                           l1379 02F8  
                                         l1389 0306                                           l1497 031E  
                                         l1499 0323                                           STR_1 03D9  
                                         STR_2 03D5                                           STR_4 03D5  
                                         _LATA 010C                                           _LATB 010D  
                                         _LATC 010E                                           _WPUA 020C  
                                         _WPUB 020D                                           _WPUC 020E  
                                         _dbuf 00A0                                           _main 0173  
                                         _prec 0066                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           _stoa 00E2  
                                         btemp 007E                                           start 001B  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 03AB  
                                        ?_main 0070                                          ?_stoa 007B  
                                        i1l212 036A                                          i1l221 03E4  
                                        i1l215 03E5                                          i1l208 02BA  
                                        i1l218 03E0                                          i1l250 0019  
                                 vfpfcnvrt@fmt 0033                                          u60_20 0364  
                                        u60_21 0363                                          u70_20 02B0  
                                        u70_21 02AF                                          u80_20 000A  
                                        u80_21 0009                                          u81_20 000F  
                                        u81_21 000E                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                                        u82_20 0014                                          u82_21 0013  
                                        u68_20 028C                                          u68_21 028B  
                                        u69_20 029C                                          u69_21 029B  
                                        _RXPPS 0E24                                          _flags 0068  
                                        _fputc 0241                                          _width 0064  
                                        _putch 03B7                                          pclath 000A  
                                        stoa@i 002B                                          stoa@l 002E  
                                        stoa@p 0031                                          stoa@s 007B  
                                        stoa@w 0029                                          status 0003  
                                        wtemp0 007E                                __end_of_strncmp 0241  
                              __initialization 001D                                   __end_of_main 01E5  
                                 __end_of_stoa 0173                                 ??_EUSART_Write 0071  
                  ?_INTERRUPT_InterruptManager 0070                 ??_EUSART_SetRxInterruptHandler 0073  
                                       ??_main 0047                                         ??_stoa 0020  
    __end_of_EUSART_DefaultFramingErrorHandler 03E6            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 03E5  
                   _EUSART_OverrunErrorHandler 00E5                                         ?_fputc 0073  
                                       _ANSELA 018C                                         ?_putch 0070  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         _RB7PPS 0E9F  
                                       i1l1441 0287                                         _ODCONA 028C  
                                       _ODCONB 028D                                         i1l1291 0353  
                                       i1l1451 02A1                                         i1l1443 028C  
                                       _ODCONC 028E                                         i1l1293 035A  
                                       i1l1453 02A7                                         i1l1445 0291  
                                       i1l1295 035E                                         i1l1455 02B0  
                                       i1l1447 0297                                         i1l1439 0282  
                                       i1l1297 0364                                         i1l1457 02B7  
                                       i1l1449 029C                                         i1l1299 0365  
                                       i1l1395 03DD                                         i1l1491 000A  
                                       i1l1397 03E1                                         i1l1493 000F  
                                       i1l1495 0014                                         i1l1489 0006  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _TX1REG 019A                                         _TX1STA 019E  
                                 vfprintf@cfmt 0041                                         _printf 0382  
                                       _strlen 036B                                         fputc@c 0073  
                                       stoa@cp 0030                                         stoa@fp 002D  
                             __end_of_vfprintf 0338                                      ??_strncmp 0077  
                            _SYSTEM_Initialize 039A                        __end_of__initialization 003A  
                           ?_SYSTEM_Initialize 0070                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 0338                            ??_SYSTEM_Initialize 0073  
                                __end_of_fputc 0282                                  __end_of_putch 03BD  
                               _OPTION_REGbits 0095                           _eusartRxStatusBuffer 005C  
              ??_EUSART_SetOverrunErrorHandler 0073                                        ??_fputc 0076  
                    __end_of_SYSTEM_Initialize 03A4                                        ??_putch 0072  
                                   __pbssBANK0 005C                                     __pbssBANK1 00A0  
                         __end_of_EUSART_Write 039A                                     __pmaintext 0173  
                                   __pintentry 0004                   ??_EUSART_DefaultErrorHandler 0071  
                                      ?_printf 0043                                        ?_strlen 0071  
                                _eusartRxCount 006A                                        _OSCTUNE 0098  
                                      _SLRCONA 030C                                        _SLRCONB 030D  
                                      _SLRCONC 030E                       ??_EUSART_SetErrorHandler 0073  
                                    ?_vfprintf 003C                                        __ptext1 0382  
                                      __ptext2 031C                                        __ptext3 003E  
                                      __ptext4 01E5                                        __ptext5 00E2  
                                      __ptext6 036B                                        __ptext7 0241  
                                      __ptext8 03B7                                        __ptext9 0390  
                        _OSCILLATOR_Initialize 03A4                       ??_PIN_MANAGER_Initialize 0071  
                                      clrloop0 03B2                                        _strncmp 01E5  
                         end_of_initialization 003A          __end_of_EUSART_SetOverrunErrorHandler 03C9  
                _EUSART_SetOverrunErrorHandler 03C3                                        fputc@fp 0075  
                                      init_ram 03AB                                        initloop 03AC  
                            _EUSART_Initialize 02EC                             ?_EUSART_Initialize 0070  
                            __end_of_vfpfcnvrt 00E2                                     ??_vfprintf 003F  
                                      strlen@a 0074                                        strlen@s 0075  
                          ??_EUSART_Initialize 0073                      __end_of_EUSART_Initialize 031C  
           __end_of_EUSART_DefaultErrorHandler 03E5                     _EUSART_DefaultErrorHandler 03E1  
                                  vfpfcnvrt@ap 0034                                    vfpfcnvrt@fp 003B  
                                 _EUSART_Write 0390                         ?_OSCILLATOR_Initialize 0070  
                               __end_of_printf 0390                                 __end_of_strlen 0382  
                          start_initialization 001D   EUSART_SetRxInterruptHandler@interruptHandler 0071  
                                  putch@txData 0072                 ?_EUSART_SetOverrunErrorHandler 0071  
                                  vfprintf@fmt 003C                     _EUSART_FramingErrorHandler 006C  
                       _EUSART_SetErrorHandler 03CF                                    __pdataBANK1 00C8  
                                     ??_printf 007C                                       ??_strlen 0073  
                                  __pbssCOMMON 007C                                      ___latbits 0002  
                                __pcstackBANK0 0020                     __end_of_EUSART_Receive_ISR 02BB  
             _EUSART_RxDefaultInterruptHandler 006E                                      __pnvBANK0 006C  
                                    __pnvBANK1 00E3                   __end_of_EUSART_RxDataHandler 036B  
                       _PIN_MANAGER_Initialize 02BB                                   _eusartRxHead 007C  
                                 _eusartRxTail 006B                   ??_INTERRUPT_InterruptManager 0071  
                                     _BAUD1CON 019F                                       ?_strncmp 0071  
                               _eusartRxBuffer 00C0                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0071                                       _LATCbits 010E  
                                    clear_ram0 03B1                                       _PIE1bits 0090  
                            _eusartRxLastError 0069                                       _PIR1bits 0010  
              ??_EUSART_SetFramingErrorHandler 0073                                      main@F9995 00C8  
    __end_of_EUSART_DefaultOverrunErrorHandler 03E1            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 03DD  
                                    _vfpfcnvrt 003E                                      main@array 0048  
                                   vfprintf@ap 003E                                     vfprintf@fp 0040  
                      ??_OSCILLATOR_Initialize 0071                            _EUSART_ErrorHandler 00E3  
                  ?_EUSART_DefaultErrorHandler 0070                                     ?_vfpfcnvrt 0033  
                         _EUSART_RxDataHandler 0353                                       __ptext10 039A  
                                     __ptext11 02BB                                       __ptext20 03DD  
                                     __ptext12 03A4                                       __ptext21 03E5  
                                     __ptext13 02EC                                       __ptext22 03E1  
                                     __ptext14 03BD                                       __ptext23 0353  
                                     __ptext15 03C3                                       __ptext16 03C9  
                                     __ptext17 03CF                                       __ptext19 0282  
                      ?_EUSART_SetErrorHandler 0071                                     _RC1STAbits 019D  
                                    stoa@F1144 00DC  EUSART_SetOverrunErrorHandler@interruptHandler 0071  
                                     int$flags 007E                                       _vfprintf 031C  
           __end_of_INTERRUPT_InterruptManager 001B                     _INTERRUPT_InterruptManager 0004  
                                    printf@fmt 0043          __end_of_EUSART_SetFramingErrorHandler 03CF  
                _EUSART_SetFramingErrorHandler 03C9                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0070                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 03D5  
                                    strncmp@_l 0071                                      strncmp@_r 0073  
         __end_of_EUSART_SetRxInterruptHandler 03C3                   _EUSART_SetRxInterruptHandler 03BD  
                                     printf@ap 0046                             _EUSART_Receive_ISR 0282  
EUSART_SetFramingErrorHandler@interruptHandler 0071                                    ??_vfpfcnvrt 0035  
                                     stoa@nuls 0022                                  _vfpfcnvrt$896 0039  
                                __pstringtext1 03D5                                  __pstringtext2 03D9  
                                __pstringtext3 0000                            ?_EUSART_Receive_ISR 0070  
                                     strncmp@l 0078                                       strncmp@n 0075  
                                     strncmp@r 007A                                     _TX1STAbits 019E  
                           EUSART_Write@txData 0071                 __end_of_PIN_MANAGER_Initialize 02EC  
                         ??_EUSART_Receive_ISR 0071  
